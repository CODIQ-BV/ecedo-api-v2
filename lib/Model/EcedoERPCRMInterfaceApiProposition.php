<?php
/**
 * EcedoERPCRMInterfaceApiProposition
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ecedo.ERP.UI.Web Core
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1-core
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.29
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EcedoERPCRMInterfaceApiProposition Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EcedoERPCRMInterfaceApiProposition implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Ecedo.ERP.CRM.Interface.Api.Proposition';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'proposition_id' => 'string',
        'product_id' => 'string',
        'reference' => 'string',
        'description' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'pricing_type' => 'string',
        'pricing_type_localized' => 'string',
        'duration' => 'int',
        'product_description_localized' => 'string',
        'proposition_group_id' => 'string',
        'proposition_group' => 'string',
        'proposition_prices' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiPropositionPrice[]',
        'entity_properties' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiEntityProperty[]',
        'contract_properties' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiContractProperty[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'proposition_id' => null,
        'product_id' => null,
        'reference' => null,
        'description' => null,
        'start_date' => 'date',
        'end_date' => 'date',
        'pricing_type' => null,
        'pricing_type_localized' => null,
        'duration' => 'int32',
        'product_description_localized' => null,
        'proposition_group_id' => null,
        'proposition_group' => null,
        'proposition_prices' => null,
        'entity_properties' => null,
        'contract_properties' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'proposition_id' => 'PropositionId',
        'product_id' => 'ProductId',
        'reference' => 'Reference',
        'description' => 'Description',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'pricing_type' => 'PricingType',
        'pricing_type_localized' => 'PricingTypeLocalized',
        'duration' => 'Duration',
        'product_description_localized' => 'ProductDescriptionLocalized',
        'proposition_group_id' => 'PropositionGroupId',
        'proposition_group' => 'PropositionGroup',
        'proposition_prices' => 'PropositionPrices',
        'entity_properties' => 'EntityProperties',
        'contract_properties' => 'ContractProperties'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'proposition_id' => 'setPropositionId',
        'product_id' => 'setProductId',
        'reference' => 'setReference',
        'description' => 'setDescription',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'pricing_type' => 'setPricingType',
        'pricing_type_localized' => 'setPricingTypeLocalized',
        'duration' => 'setDuration',
        'product_description_localized' => 'setProductDescriptionLocalized',
        'proposition_group_id' => 'setPropositionGroupId',
        'proposition_group' => 'setPropositionGroup',
        'proposition_prices' => 'setPropositionPrices',
        'entity_properties' => 'setEntityProperties',
        'contract_properties' => 'setContractProperties'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'proposition_id' => 'getPropositionId',
        'product_id' => 'getProductId',
        'reference' => 'getReference',
        'description' => 'getDescription',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'pricing_type' => 'getPricingType',
        'pricing_type_localized' => 'getPricingTypeLocalized',
        'duration' => 'getDuration',
        'product_description_localized' => 'getProductDescriptionLocalized',
        'proposition_group_id' => 'getPropositionGroupId',
        'proposition_group' => 'getPropositionGroup',
        'proposition_prices' => 'getPropositionPrices',
        'entity_properties' => 'getEntityProperties',
        'contract_properties' => 'getContractProperties'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['proposition_id'] = isset($data['proposition_id']) ? $data['proposition_id'] : null;
        $this->container['product_id'] = isset($data['product_id']) ? $data['product_id'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['pricing_type'] = isset($data['pricing_type']) ? $data['pricing_type'] : null;
        $this->container['pricing_type_localized'] = isset($data['pricing_type_localized']) ? $data['pricing_type_localized'] : null;
        $this->container['duration'] = isset($data['duration']) ? $data['duration'] : null;
        $this->container['product_description_localized'] = isset($data['product_description_localized']) ? $data['product_description_localized'] : null;
        $this->container['proposition_group_id'] = isset($data['proposition_group_id']) ? $data['proposition_group_id'] : null;
        $this->container['proposition_group'] = isset($data['proposition_group']) ? $data['proposition_group'] : null;
        $this->container['proposition_prices'] = isset($data['proposition_prices']) ? $data['proposition_prices'] : null;
        $this->container['entity_properties'] = isset($data['entity_properties']) ? $data['entity_properties'] : null;
        $this->container['contract_properties'] = isset($data['contract_properties']) ? $data['contract_properties'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets proposition_id
     *
     * @return string
     */
    public function getPropositionId()
    {
        return $this->container['proposition_id'];
    }

    /**
     * Sets proposition_id
     *
     * @param string $proposition_id proposition_id
     *
     * @return $this
     */
    public function setPropositionId($proposition_id)
    {
        $this->container['proposition_id'] = $proposition_id;

        return $this;
    }

    /**
     * Gets product_id
     *
     * @return string
     */
    public function getProductId()
    {
        return $this->container['product_id'];
    }

    /**
     * Sets product_id
     *
     * @param string $product_id product_id
     *
     * @return $this
     */
    public function setProductId($product_id)
    {
        $this->container['product_id'] = $product_id;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date start_date
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date end_date
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets pricing_type
     *
     * @return string
     */
    public function getPricingType()
    {
        return $this->container['pricing_type'];
    }

    /**
     * Sets pricing_type
     *
     * @param string $pricing_type pricing_type
     *
     * @return $this
     */
    public function setPricingType($pricing_type)
    {
        $this->container['pricing_type'] = $pricing_type;

        return $this;
    }

    /**
     * Gets pricing_type_localized
     *
     * @return string
     */
    public function getPricingTypeLocalized()
    {
        return $this->container['pricing_type_localized'];
    }

    /**
     * Sets pricing_type_localized
     *
     * @param string $pricing_type_localized pricing_type_localized
     *
     * @return $this
     */
    public function setPricingTypeLocalized($pricing_type_localized)
    {
        $this->container['pricing_type_localized'] = $pricing_type_localized;

        return $this;
    }

    /**
     * Gets duration
     *
     * @return int
     */
    public function getDuration()
    {
        return $this->container['duration'];
    }

    /**
     * Sets duration
     *
     * @param int $duration duration
     *
     * @return $this
     */
    public function setDuration($duration)
    {
        $this->container['duration'] = $duration;

        return $this;
    }

    /**
     * Gets product_description_localized
     *
     * @return string
     */
    public function getProductDescriptionLocalized()
    {
        return $this->container['product_description_localized'];
    }

    /**
     * Sets product_description_localized
     *
     * @param string $product_description_localized product_description_localized
     *
     * @return $this
     */
    public function setProductDescriptionLocalized($product_description_localized)
    {
        $this->container['product_description_localized'] = $product_description_localized;

        return $this;
    }

    /**
     * Gets proposition_group_id
     *
     * @return string
     */
    public function getPropositionGroupId()
    {
        return $this->container['proposition_group_id'];
    }

    /**
     * Sets proposition_group_id
     *
     * @param string $proposition_group_id proposition_group_id
     *
     * @return $this
     */
    public function setPropositionGroupId($proposition_group_id)
    {
        $this->container['proposition_group_id'] = $proposition_group_id;

        return $this;
    }

    /**
     * Gets proposition_group
     *
     * @return string
     */
    public function getPropositionGroup()
    {
        return $this->container['proposition_group'];
    }

    /**
     * Sets proposition_group
     *
     * @param string $proposition_group proposition_group
     *
     * @return $this
     */
    public function setPropositionGroup($proposition_group)
    {
        $this->container['proposition_group'] = $proposition_group;

        return $this;
    }

    /**
     * Gets proposition_prices
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiPropositionPrice[]
     */
    public function getPropositionPrices()
    {
        return $this->container['proposition_prices'];
    }

    /**
     * Sets proposition_prices
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiPropositionPrice[] $proposition_prices proposition_prices
     *
     * @return $this
     */
    public function setPropositionPrices($proposition_prices)
    {
        $this->container['proposition_prices'] = $proposition_prices;

        return $this;
    }

    /**
     * Gets entity_properties
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiEntityProperty[]
     */
    public function getEntityProperties()
    {
        return $this->container['entity_properties'];
    }

    /**
     * Sets entity_properties
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiEntityProperty[] $entity_properties entity_properties
     *
     * @return $this
     */
    public function setEntityProperties($entity_properties)
    {
        $this->container['entity_properties'] = $entity_properties;

        return $this;
    }

    /**
     * Gets contract_properties
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiContractProperty[]
     */
    public function getContractProperties()
    {
        return $this->container['contract_properties'];
    }

    /**
     * Sets contract_properties
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiContractProperty[] $contract_properties contract_properties
     *
     * @return $this
     */
    public function setContractProperties($contract_properties)
    {
        $this->container['contract_properties'] = $contract_properties;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


