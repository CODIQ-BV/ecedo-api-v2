<?php
/**
 * EcedoERPCRMInterfaceApiPropositionPrice
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ecedo.ERP.UI.Web Core
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1-core
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.29
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EcedoERPCRMInterfaceApiPropositionPrice Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EcedoERPCRMInterfaceApiPropositionPrice implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Ecedo.ERP.CRM.Interface.Api.PropositionPrice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'proposition_id' => 'string',
        'price_component_price_id' => 'string',
        'price_component_id' => 'string',
        'price_component_type' => 'string',
        'price_component_type_localized' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'price' => 'double',
        'price_taxed' => 'double',
        'gos_region' => 'int',
        'grid_area' => 'string',
        'range_begin' => 'int',
        'range_end' => 'int',
        'profile' => 'string',
        'location_type' => 'string',
        'location_type_localized' => 'string',
        'residential' => 'bool',
        'status' => 'string',
        'status_localized' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'proposition_id' => null,
        'price_component_price_id' => null,
        'price_component_id' => null,
        'price_component_type' => null,
        'price_component_type_localized' => null,
        'start_date' => 'date',
        'end_date' => 'date',
        'price' => 'double',
        'price_taxed' => 'double',
        'gos_region' => 'int32',
        'grid_area' => null,
        'range_begin' => 'int32',
        'range_end' => 'int32',
        'profile' => null,
        'location_type' => null,
        'location_type_localized' => null,
        'residential' => null,
        'status' => null,
        'status_localized' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'proposition_id' => 'PropositionId',
        'price_component_price_id' => 'PriceComponentPriceId',
        'price_component_id' => 'PriceComponentId',
        'price_component_type' => 'PriceComponentType',
        'price_component_type_localized' => 'PriceComponentTypeLocalized',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'price' => 'Price',
        'price_taxed' => 'PriceTaxed',
        'gos_region' => 'GosRegion',
        'grid_area' => 'GridArea',
        'range_begin' => 'RangeBegin',
        'range_end' => 'RangeEnd',
        'profile' => 'Profile',
        'location_type' => 'LocationType',
        'location_type_localized' => 'LocationTypeLocalized',
        'residential' => 'Residential',
        'status' => 'Status',
        'status_localized' => 'StatusLocalized'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'proposition_id' => 'setPropositionId',
        'price_component_price_id' => 'setPriceComponentPriceId',
        'price_component_id' => 'setPriceComponentId',
        'price_component_type' => 'setPriceComponentType',
        'price_component_type_localized' => 'setPriceComponentTypeLocalized',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'price' => 'setPrice',
        'price_taxed' => 'setPriceTaxed',
        'gos_region' => 'setGosRegion',
        'grid_area' => 'setGridArea',
        'range_begin' => 'setRangeBegin',
        'range_end' => 'setRangeEnd',
        'profile' => 'setProfile',
        'location_type' => 'setLocationType',
        'location_type_localized' => 'setLocationTypeLocalized',
        'residential' => 'setResidential',
        'status' => 'setStatus',
        'status_localized' => 'setStatusLocalized'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'proposition_id' => 'getPropositionId',
        'price_component_price_id' => 'getPriceComponentPriceId',
        'price_component_id' => 'getPriceComponentId',
        'price_component_type' => 'getPriceComponentType',
        'price_component_type_localized' => 'getPriceComponentTypeLocalized',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'price' => 'getPrice',
        'price_taxed' => 'getPriceTaxed',
        'gos_region' => 'getGosRegion',
        'grid_area' => 'getGridArea',
        'range_begin' => 'getRangeBegin',
        'range_end' => 'getRangeEnd',
        'profile' => 'getProfile',
        'location_type' => 'getLocationType',
        'location_type_localized' => 'getLocationTypeLocalized',
        'residential' => 'getResidential',
        'status' => 'getStatus',
        'status_localized' => 'getStatusLocalized'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['proposition_id'] = isset($data['proposition_id']) ? $data['proposition_id'] : null;
        $this->container['price_component_price_id'] = isset($data['price_component_price_id']) ? $data['price_component_price_id'] : null;
        $this->container['price_component_id'] = isset($data['price_component_id']) ? $data['price_component_id'] : null;
        $this->container['price_component_type'] = isset($data['price_component_type']) ? $data['price_component_type'] : null;
        $this->container['price_component_type_localized'] = isset($data['price_component_type_localized']) ? $data['price_component_type_localized'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['price_taxed'] = isset($data['price_taxed']) ? $data['price_taxed'] : null;
        $this->container['gos_region'] = isset($data['gos_region']) ? $data['gos_region'] : null;
        $this->container['grid_area'] = isset($data['grid_area']) ? $data['grid_area'] : null;
        $this->container['range_begin'] = isset($data['range_begin']) ? $data['range_begin'] : null;
        $this->container['range_end'] = isset($data['range_end']) ? $data['range_end'] : null;
        $this->container['profile'] = isset($data['profile']) ? $data['profile'] : null;
        $this->container['location_type'] = isset($data['location_type']) ? $data['location_type'] : null;
        $this->container['location_type_localized'] = isset($data['location_type_localized']) ? $data['location_type_localized'] : null;
        $this->container['residential'] = isset($data['residential']) ? $data['residential'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['status_localized'] = isset($data['status_localized']) ? $data['status_localized'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets proposition_id
     *
     * @return string
     */
    public function getPropositionId()
    {
        return $this->container['proposition_id'];
    }

    /**
     * Sets proposition_id
     *
     * @param string $proposition_id proposition_id
     *
     * @return $this
     */
    public function setPropositionId($proposition_id)
    {
        $this->container['proposition_id'] = $proposition_id;

        return $this;
    }

    /**
     * Gets price_component_price_id
     *
     * @return string
     */
    public function getPriceComponentPriceId()
    {
        return $this->container['price_component_price_id'];
    }

    /**
     * Sets price_component_price_id
     *
     * @param string $price_component_price_id price_component_price_id
     *
     * @return $this
     */
    public function setPriceComponentPriceId($price_component_price_id)
    {
        $this->container['price_component_price_id'] = $price_component_price_id;

        return $this;
    }

    /**
     * Gets price_component_id
     *
     * @return string
     */
    public function getPriceComponentId()
    {
        return $this->container['price_component_id'];
    }

    /**
     * Sets price_component_id
     *
     * @param string $price_component_id price_component_id
     *
     * @return $this
     */
    public function setPriceComponentId($price_component_id)
    {
        $this->container['price_component_id'] = $price_component_id;

        return $this;
    }

    /**
     * Gets price_component_type
     *
     * @return string
     */
    public function getPriceComponentType()
    {
        return $this->container['price_component_type'];
    }

    /**
     * Sets price_component_type
     *
     * @param string $price_component_type price_component_type
     *
     * @return $this
     */
    public function setPriceComponentType($price_component_type)
    {
        $this->container['price_component_type'] = $price_component_type;

        return $this;
    }

    /**
     * Gets price_component_type_localized
     *
     * @return string
     */
    public function getPriceComponentTypeLocalized()
    {
        return $this->container['price_component_type_localized'];
    }

    /**
     * Sets price_component_type_localized
     *
     * @param string $price_component_type_localized price_component_type_localized
     *
     * @return $this
     */
    public function setPriceComponentTypeLocalized($price_component_type_localized)
    {
        $this->container['price_component_type_localized'] = $price_component_type_localized;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date start_date
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date end_date
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets price
     *
     * @return double
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param double $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets price_taxed
     *
     * @return double
     */
    public function getPriceTaxed()
    {
        return $this->container['price_taxed'];
    }

    /**
     * Sets price_taxed
     *
     * @param double $price_taxed price_taxed
     *
     * @return $this
     */
    public function setPriceTaxed($price_taxed)
    {
        $this->container['price_taxed'] = $price_taxed;

        return $this;
    }

    /**
     * Gets gos_region
     *
     * @return int
     */
    public function getGosRegion()
    {
        return $this->container['gos_region'];
    }

    /**
     * Sets gos_region
     *
     * @param int $gos_region gos_region
     *
     * @return $this
     */
    public function setGosRegion($gos_region)
    {
        $this->container['gos_region'] = $gos_region;

        return $this;
    }

    /**
     * Gets grid_area
     *
     * @return string
     */
    public function getGridArea()
    {
        return $this->container['grid_area'];
    }

    /**
     * Sets grid_area
     *
     * @param string $grid_area grid_area
     *
     * @return $this
     */
    public function setGridArea($grid_area)
    {
        $this->container['grid_area'] = $grid_area;

        return $this;
    }

    /**
     * Gets range_begin
     *
     * @return int
     */
    public function getRangeBegin()
    {
        return $this->container['range_begin'];
    }

    /**
     * Sets range_begin
     *
     * @param int $range_begin range_begin
     *
     * @return $this
     */
    public function setRangeBegin($range_begin)
    {
        $this->container['range_begin'] = $range_begin;

        return $this;
    }

    /**
     * Gets range_end
     *
     * @return int
     */
    public function getRangeEnd()
    {
        return $this->container['range_end'];
    }

    /**
     * Sets range_end
     *
     * @param int $range_end range_end
     *
     * @return $this
     */
    public function setRangeEnd($range_end)
    {
        $this->container['range_end'] = $range_end;

        return $this;
    }

    /**
     * Gets profile
     *
     * @return string
     */
    public function getProfile()
    {
        return $this->container['profile'];
    }

    /**
     * Sets profile
     *
     * @param string $profile profile
     *
     * @return $this
     */
    public function setProfile($profile)
    {
        $this->container['profile'] = $profile;

        return $this;
    }

    /**
     * Gets location_type
     *
     * @return string
     */
    public function getLocationType()
    {
        return $this->container['location_type'];
    }

    /**
     * Sets location_type
     *
     * @param string $location_type location_type
     *
     * @return $this
     */
    public function setLocationType($location_type)
    {
        $this->container['location_type'] = $location_type;

        return $this;
    }

    /**
     * Gets location_type_localized
     *
     * @return string
     */
    public function getLocationTypeLocalized()
    {
        return $this->container['location_type_localized'];
    }

    /**
     * Sets location_type_localized
     *
     * @param string $location_type_localized location_type_localized
     *
     * @return $this
     */
    public function setLocationTypeLocalized($location_type_localized)
    {
        $this->container['location_type_localized'] = $location_type_localized;

        return $this;
    }

    /**
     * Gets residential
     *
     * @return bool
     */
    public function getResidential()
    {
        return $this->container['residential'];
    }

    /**
     * Sets residential
     *
     * @param bool $residential residential
     *
     * @return $this
     */
    public function setResidential($residential)
    {
        $this->container['residential'] = $residential;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_localized
     *
     * @return string
     */
    public function getStatusLocalized()
    {
        return $this->container['status_localized'];
    }

    /**
     * Sets status_localized
     *
     * @param string $status_localized status_localized
     *
     * @return $this
     */
    public function setStatusLocalized($status_localized)
    {
        $this->container['status_localized'] = $status_localized;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


