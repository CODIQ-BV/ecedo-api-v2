<?php
/**
 * EcedoERPCRMInterfaceApiDebtor
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ecedo.ERP.UI.Web Core
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1-core
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.29
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EcedoERPCRMInterfaceApiDebtor Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EcedoERPCRMInterfaceApiDebtor implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Ecedo.ERP.CRM.Interface.Api.Debtor';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'debtor_id' => 'string',
        'client_reference' => 'string',
        'payment_method' => 'string',
        'payment_method_localized' => 'string',
        'bank_account_type' => 'string',
        'bank_account_type_localized' => 'string',
        'bank_account_number' => 'string',
        'debtor_name' => 'string',
        'full_bank_account_number' => 'string',
        'preferred_automatic_collection_day' => 'int',
        'mandate_type' => 'string',
        'mandate_type_localized' => 'string',
        'mandate_reference' => 'string',
        'payment_term' => 'int',
        'mandate_date' => '\DateTime',
        'payment_reference' => 'string',
        'preferred_advance_payment_invoice_contact_method' => 'string',
        'preferred_advance_payment_invoice_contact_method_localized' => 'string',
        'preferred_settlement_invoice_contact_method' => 'string',
        'preferred_settlement_invoice_contact_method_localized' => 'string',
        'advance_payment_schedule_type' => 'string',
        'advance_payment_schedule_type_localized' => 'string',
        'preferred_invoice_day' => 'int',
        'print_advance_payment_invoice' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'debtor_id' => null,
        'client_reference' => null,
        'payment_method' => null,
        'payment_method_localized' => null,
        'bank_account_type' => null,
        'bank_account_type_localized' => null,
        'bank_account_number' => null,
        'debtor_name' => null,
        'full_bank_account_number' => null,
        'preferred_automatic_collection_day' => 'int32',
        'mandate_type' => null,
        'mandate_type_localized' => null,
        'mandate_reference' => null,
        'payment_term' => 'int32',
        'mandate_date' => 'date',
        'payment_reference' => null,
        'preferred_advance_payment_invoice_contact_method' => null,
        'preferred_advance_payment_invoice_contact_method_localized' => null,
        'preferred_settlement_invoice_contact_method' => null,
        'preferred_settlement_invoice_contact_method_localized' => null,
        'advance_payment_schedule_type' => null,
        'advance_payment_schedule_type_localized' => null,
        'preferred_invoice_day' => 'int32',
        'print_advance_payment_invoice' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'debtor_id' => 'DebtorId',
        'client_reference' => 'ClientReference',
        'payment_method' => 'PaymentMethod',
        'payment_method_localized' => 'PaymentMethodLocalized',
        'bank_account_type' => 'BankAccountType',
        'bank_account_type_localized' => 'BankAccountTypeLocalized',
        'bank_account_number' => 'BankAccountNumber',
        'debtor_name' => 'DebtorName',
        'full_bank_account_number' => 'FullBankAccountNumber',
        'preferred_automatic_collection_day' => 'PreferredAutomaticCollectionDay',
        'mandate_type' => 'MandateType',
        'mandate_type_localized' => 'MandateTypeLocalized',
        'mandate_reference' => 'MandateReference',
        'payment_term' => 'PaymentTerm',
        'mandate_date' => 'MandateDate',
        'payment_reference' => 'PaymentReference',
        'preferred_advance_payment_invoice_contact_method' => 'PreferredAdvancePaymentInvoiceContactMethod',
        'preferred_advance_payment_invoice_contact_method_localized' => 'PreferredAdvancePaymentInvoiceContactMethodLocalized',
        'preferred_settlement_invoice_contact_method' => 'PreferredSettlementInvoiceContactMethod',
        'preferred_settlement_invoice_contact_method_localized' => 'PreferredSettlementInvoiceContactMethodLocalized',
        'advance_payment_schedule_type' => 'AdvancePaymentScheduleType',
        'advance_payment_schedule_type_localized' => 'AdvancePaymentScheduleTypeLocalized',
        'preferred_invoice_day' => 'PreferredInvoiceDay',
        'print_advance_payment_invoice' => 'PrintAdvancePaymentInvoice'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'debtor_id' => 'setDebtorId',
        'client_reference' => 'setClientReference',
        'payment_method' => 'setPaymentMethod',
        'payment_method_localized' => 'setPaymentMethodLocalized',
        'bank_account_type' => 'setBankAccountType',
        'bank_account_type_localized' => 'setBankAccountTypeLocalized',
        'bank_account_number' => 'setBankAccountNumber',
        'debtor_name' => 'setDebtorName',
        'full_bank_account_number' => 'setFullBankAccountNumber',
        'preferred_automatic_collection_day' => 'setPreferredAutomaticCollectionDay',
        'mandate_type' => 'setMandateType',
        'mandate_type_localized' => 'setMandateTypeLocalized',
        'mandate_reference' => 'setMandateReference',
        'payment_term' => 'setPaymentTerm',
        'mandate_date' => 'setMandateDate',
        'payment_reference' => 'setPaymentReference',
        'preferred_advance_payment_invoice_contact_method' => 'setPreferredAdvancePaymentInvoiceContactMethod',
        'preferred_advance_payment_invoice_contact_method_localized' => 'setPreferredAdvancePaymentInvoiceContactMethodLocalized',
        'preferred_settlement_invoice_contact_method' => 'setPreferredSettlementInvoiceContactMethod',
        'preferred_settlement_invoice_contact_method_localized' => 'setPreferredSettlementInvoiceContactMethodLocalized',
        'advance_payment_schedule_type' => 'setAdvancePaymentScheduleType',
        'advance_payment_schedule_type_localized' => 'setAdvancePaymentScheduleTypeLocalized',
        'preferred_invoice_day' => 'setPreferredInvoiceDay',
        'print_advance_payment_invoice' => 'setPrintAdvancePaymentInvoice'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'debtor_id' => 'getDebtorId',
        'client_reference' => 'getClientReference',
        'payment_method' => 'getPaymentMethod',
        'payment_method_localized' => 'getPaymentMethodLocalized',
        'bank_account_type' => 'getBankAccountType',
        'bank_account_type_localized' => 'getBankAccountTypeLocalized',
        'bank_account_number' => 'getBankAccountNumber',
        'debtor_name' => 'getDebtorName',
        'full_bank_account_number' => 'getFullBankAccountNumber',
        'preferred_automatic_collection_day' => 'getPreferredAutomaticCollectionDay',
        'mandate_type' => 'getMandateType',
        'mandate_type_localized' => 'getMandateTypeLocalized',
        'mandate_reference' => 'getMandateReference',
        'payment_term' => 'getPaymentTerm',
        'mandate_date' => 'getMandateDate',
        'payment_reference' => 'getPaymentReference',
        'preferred_advance_payment_invoice_contact_method' => 'getPreferredAdvancePaymentInvoiceContactMethod',
        'preferred_advance_payment_invoice_contact_method_localized' => 'getPreferredAdvancePaymentInvoiceContactMethodLocalized',
        'preferred_settlement_invoice_contact_method' => 'getPreferredSettlementInvoiceContactMethod',
        'preferred_settlement_invoice_contact_method_localized' => 'getPreferredSettlementInvoiceContactMethodLocalized',
        'advance_payment_schedule_type' => 'getAdvancePaymentScheduleType',
        'advance_payment_schedule_type_localized' => 'getAdvancePaymentScheduleTypeLocalized',
        'preferred_invoice_day' => 'getPreferredInvoiceDay',
        'print_advance_payment_invoice' => 'getPrintAdvancePaymentInvoice'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['debtor_id'] = isset($data['debtor_id']) ? $data['debtor_id'] : null;
        $this->container['client_reference'] = isset($data['client_reference']) ? $data['client_reference'] : null;
        $this->container['payment_method'] = isset($data['payment_method']) ? $data['payment_method'] : null;
        $this->container['payment_method_localized'] = isset($data['payment_method_localized']) ? $data['payment_method_localized'] : null;
        $this->container['bank_account_type'] = isset($data['bank_account_type']) ? $data['bank_account_type'] : null;
        $this->container['bank_account_type_localized'] = isset($data['bank_account_type_localized']) ? $data['bank_account_type_localized'] : null;
        $this->container['bank_account_number'] = isset($data['bank_account_number']) ? $data['bank_account_number'] : null;
        $this->container['debtor_name'] = isset($data['debtor_name']) ? $data['debtor_name'] : null;
        $this->container['full_bank_account_number'] = isset($data['full_bank_account_number']) ? $data['full_bank_account_number'] : null;
        $this->container['preferred_automatic_collection_day'] = isset($data['preferred_automatic_collection_day']) ? $data['preferred_automatic_collection_day'] : null;
        $this->container['mandate_type'] = isset($data['mandate_type']) ? $data['mandate_type'] : null;
        $this->container['mandate_type_localized'] = isset($data['mandate_type_localized']) ? $data['mandate_type_localized'] : null;
        $this->container['mandate_reference'] = isset($data['mandate_reference']) ? $data['mandate_reference'] : null;
        $this->container['payment_term'] = isset($data['payment_term']) ? $data['payment_term'] : null;
        $this->container['mandate_date'] = isset($data['mandate_date']) ? $data['mandate_date'] : null;
        $this->container['payment_reference'] = isset($data['payment_reference']) ? $data['payment_reference'] : null;
        $this->container['preferred_advance_payment_invoice_contact_method'] = isset($data['preferred_advance_payment_invoice_contact_method']) ? $data['preferred_advance_payment_invoice_contact_method'] : null;
        $this->container['preferred_advance_payment_invoice_contact_method_localized'] = isset($data['preferred_advance_payment_invoice_contact_method_localized']) ? $data['preferred_advance_payment_invoice_contact_method_localized'] : null;
        $this->container['preferred_settlement_invoice_contact_method'] = isset($data['preferred_settlement_invoice_contact_method']) ? $data['preferred_settlement_invoice_contact_method'] : null;
        $this->container['preferred_settlement_invoice_contact_method_localized'] = isset($data['preferred_settlement_invoice_contact_method_localized']) ? $data['preferred_settlement_invoice_contact_method_localized'] : null;
        $this->container['advance_payment_schedule_type'] = isset($data['advance_payment_schedule_type']) ? $data['advance_payment_schedule_type'] : null;
        $this->container['advance_payment_schedule_type_localized'] = isset($data['advance_payment_schedule_type_localized']) ? $data['advance_payment_schedule_type_localized'] : null;
        $this->container['preferred_invoice_day'] = isset($data['preferred_invoice_day']) ? $data['preferred_invoice_day'] : null;
        $this->container['print_advance_payment_invoice'] = isset($data['print_advance_payment_invoice']) ? $data['print_advance_payment_invoice'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets debtor_id
     *
     * @return string
     */
    public function getDebtorId()
    {
        return $this->container['debtor_id'];
    }

    /**
     * Sets debtor_id
     *
     * @param string $debtor_id debtor_id
     *
     * @return $this
     */
    public function setDebtorId($debtor_id)
    {
        $this->container['debtor_id'] = $debtor_id;

        return $this;
    }

    /**
     * Gets client_reference
     *
     * @return string
     */
    public function getClientReference()
    {
        return $this->container['client_reference'];
    }

    /**
     * Sets client_reference
     *
     * @param string $client_reference client_reference
     *
     * @return $this
     */
    public function setClientReference($client_reference)
    {
        $this->container['client_reference'] = $client_reference;

        return $this;
    }

    /**
     * Gets payment_method
     *
     * @return string
     */
    public function getPaymentMethod()
    {
        return $this->container['payment_method'];
    }

    /**
     * Sets payment_method
     *
     * @param string $payment_method De betaalmethode waar de klant gebruik van maakt
     *
     * @return $this
     */
    public function setPaymentMethod($payment_method)
    {
        $this->container['payment_method'] = $payment_method;

        return $this;
    }

    /**
     * Gets payment_method_localized
     *
     * @return string
     */
    public function getPaymentMethodLocalized()
    {
        return $this->container['payment_method_localized'];
    }

    /**
     * Sets payment_method_localized
     *
     * @param string $payment_method_localized Nederlandse vertaling van `PaymentMethod`
     *
     * @return $this
     */
    public function setPaymentMethodLocalized($payment_method_localized)
    {
        $this->container['payment_method_localized'] = $payment_method_localized;

        return $this;
    }

    /**
     * Gets bank_account_type
     *
     * @return string
     */
    public function getBankAccountType()
    {
        return $this->container['bank_account_type'];
    }

    /**
     * Sets bank_account_type
     *
     * @param string $bank_account_type Type bankrekeningnummer
     *
     * @return $this
     */
    public function setBankAccountType($bank_account_type)
    {
        $this->container['bank_account_type'] = $bank_account_type;

        return $this;
    }

    /**
     * Gets bank_account_type_localized
     *
     * @return string
     */
    public function getBankAccountTypeLocalized()
    {
        return $this->container['bank_account_type_localized'];
    }

    /**
     * Sets bank_account_type_localized
     *
     * @param string $bank_account_type_localized Nederlandse vertaling van `BankAccountType`
     *
     * @return $this
     */
    public function setBankAccountTypeLocalized($bank_account_type_localized)
    {
        $this->container['bank_account_type_localized'] = $bank_account_type_localized;

        return $this;
    }

    /**
     * Gets bank_account_number
     *
     * @return string
     */
    public function getBankAccountNumber()
    {
        return $this->container['bank_account_number'];
    }

    /**
     * Sets bank_account_number
     *
     * @param string $bank_account_number Bankrekeningnummer
     *
     * @return $this
     */
    public function setBankAccountNumber($bank_account_number)
    {
        $this->container['bank_account_number'] = $bank_account_number;

        return $this;
    }

    /**
     * Gets debtor_name
     *
     * @return string
     */
    public function getDebtorName()
    {
        return $this->container['debtor_name'];
    }

    /**
     * Sets debtor_name
     *
     * @param string $debtor_name Een optionele afwijkende tenaamstelling voor de bankrekening
     *
     * @return $this
     */
    public function setDebtorName($debtor_name)
    {
        $this->container['debtor_name'] = $debtor_name;

        return $this;
    }

    /**
     * Gets full_bank_account_number
     *
     * @return string
     */
    public function getFullBankAccountNumber()
    {
        return $this->container['full_bank_account_number'];
    }

    /**
     * Sets full_bank_account_number
     *
     * @param string $full_bank_account_number full_bank_account_number
     *
     * @return $this
     */
    public function setFullBankAccountNumber($full_bank_account_number)
    {
        $this->container['full_bank_account_number'] = $full_bank_account_number;

        return $this;
    }

    /**
     * Gets preferred_automatic_collection_day
     *
     * @return int
     */
    public function getPreferredAutomaticCollectionDay()
    {
        return $this->container['preferred_automatic_collection_day'];
    }

    /**
     * Sets preferred_automatic_collection_day
     *
     * @param int $preferred_automatic_collection_day preferred_automatic_collection_day
     *
     * @return $this
     */
    public function setPreferredAutomaticCollectionDay($preferred_automatic_collection_day)
    {
        $this->container['preferred_automatic_collection_day'] = $preferred_automatic_collection_day;

        return $this;
    }

    /**
     * Gets mandate_type
     *
     * @return string
     */
    public function getMandateType()
    {
        return $this->container['mandate_type'];
    }

    /**
     * Sets mandate_type
     *
     * @param string $mandate_type mandate_type
     *
     * @return $this
     */
    public function setMandateType($mandate_type)
    {
        $this->container['mandate_type'] = $mandate_type;

        return $this;
    }

    /**
     * Gets mandate_type_localized
     *
     * @return string
     */
    public function getMandateTypeLocalized()
    {
        return $this->container['mandate_type_localized'];
    }

    /**
     * Sets mandate_type_localized
     *
     * @param string $mandate_type_localized mandate_type_localized
     *
     * @return $this
     */
    public function setMandateTypeLocalized($mandate_type_localized)
    {
        $this->container['mandate_type_localized'] = $mandate_type_localized;

        return $this;
    }

    /**
     * Gets mandate_reference
     *
     * @return string
     */
    public function getMandateReference()
    {
        return $this->container['mandate_reference'];
    }

    /**
     * Sets mandate_reference
     *
     * @param string $mandate_reference mandate_reference
     *
     * @return $this
     */
    public function setMandateReference($mandate_reference)
    {
        $this->container['mandate_reference'] = $mandate_reference;

        return $this;
    }

    /**
     * Gets payment_term
     *
     * @return int
     */
    public function getPaymentTerm()
    {
        return $this->container['payment_term'];
    }

    /**
     * Sets payment_term
     *
     * @param int $payment_term Betaaltermijn in dagen
     *
     * @return $this
     */
    public function setPaymentTerm($payment_term)
    {
        $this->container['payment_term'] = $payment_term;

        return $this;
    }

    /**
     * Gets mandate_date
     *
     * @return \DateTime
     */
    public function getMandateDate()
    {
        return $this->container['mandate_date'];
    }

    /**
     * Sets mandate_date
     *
     * @param \DateTime $mandate_date mandate_date
     *
     * @return $this
     */
    public function setMandateDate($mandate_date)
    {
        $this->container['mandate_date'] = $mandate_date;

        return $this;
    }

    /**
     * Gets payment_reference
     *
     * @return string
     */
    public function getPaymentReference()
    {
        return $this->container['payment_reference'];
    }

    /**
     * Sets payment_reference
     *
     * @param string $payment_reference payment_reference
     *
     * @return $this
     */
    public function setPaymentReference($payment_reference)
    {
        $this->container['payment_reference'] = $payment_reference;

        return $this;
    }

    /**
     * Gets preferred_advance_payment_invoice_contact_method
     *
     * @return string
     */
    public function getPreferredAdvancePaymentInvoiceContactMethod()
    {
        return $this->container['preferred_advance_payment_invoice_contact_method'];
    }

    /**
     * Sets preferred_advance_payment_invoice_contact_method
     *
     * @param string $preferred_advance_payment_invoice_contact_method preferred_advance_payment_invoice_contact_method
     *
     * @return $this
     */
    public function setPreferredAdvancePaymentInvoiceContactMethod($preferred_advance_payment_invoice_contact_method)
    {
        $this->container['preferred_advance_payment_invoice_contact_method'] = $preferred_advance_payment_invoice_contact_method;

        return $this;
    }

    /**
     * Gets preferred_advance_payment_invoice_contact_method_localized
     *
     * @return string
     */
    public function getPreferredAdvancePaymentInvoiceContactMethodLocalized()
    {
        return $this->container['preferred_advance_payment_invoice_contact_method_localized'];
    }

    /**
     * Sets preferred_advance_payment_invoice_contact_method_localized
     *
     * @param string $preferred_advance_payment_invoice_contact_method_localized preferred_advance_payment_invoice_contact_method_localized
     *
     * @return $this
     */
    public function setPreferredAdvancePaymentInvoiceContactMethodLocalized($preferred_advance_payment_invoice_contact_method_localized)
    {
        $this->container['preferred_advance_payment_invoice_contact_method_localized'] = $preferred_advance_payment_invoice_contact_method_localized;

        return $this;
    }

    /**
     * Gets preferred_settlement_invoice_contact_method
     *
     * @return string
     */
    public function getPreferredSettlementInvoiceContactMethod()
    {
        return $this->container['preferred_settlement_invoice_contact_method'];
    }

    /**
     * Sets preferred_settlement_invoice_contact_method
     *
     * @param string $preferred_settlement_invoice_contact_method preferred_settlement_invoice_contact_method
     *
     * @return $this
     */
    public function setPreferredSettlementInvoiceContactMethod($preferred_settlement_invoice_contact_method)
    {
        $this->container['preferred_settlement_invoice_contact_method'] = $preferred_settlement_invoice_contact_method;

        return $this;
    }

    /**
     * Gets preferred_settlement_invoice_contact_method_localized
     *
     * @return string
     */
    public function getPreferredSettlementInvoiceContactMethodLocalized()
    {
        return $this->container['preferred_settlement_invoice_contact_method_localized'];
    }

    /**
     * Sets preferred_settlement_invoice_contact_method_localized
     *
     * @param string $preferred_settlement_invoice_contact_method_localized preferred_settlement_invoice_contact_method_localized
     *
     * @return $this
     */
    public function setPreferredSettlementInvoiceContactMethodLocalized($preferred_settlement_invoice_contact_method_localized)
    {
        $this->container['preferred_settlement_invoice_contact_method_localized'] = $preferred_settlement_invoice_contact_method_localized;

        return $this;
    }

    /**
     * Gets advance_payment_schedule_type
     *
     * @return string
     */
    public function getAdvancePaymentScheduleType()
    {
        return $this->container['advance_payment_schedule_type'];
    }

    /**
     * Sets advance_payment_schedule_type
     *
     * @param string $advance_payment_schedule_type advance_payment_schedule_type
     *
     * @return $this
     */
    public function setAdvancePaymentScheduleType($advance_payment_schedule_type)
    {
        $this->container['advance_payment_schedule_type'] = $advance_payment_schedule_type;

        return $this;
    }

    /**
     * Gets advance_payment_schedule_type_localized
     *
     * @return string
     */
    public function getAdvancePaymentScheduleTypeLocalized()
    {
        return $this->container['advance_payment_schedule_type_localized'];
    }

    /**
     * Sets advance_payment_schedule_type_localized
     *
     * @param string $advance_payment_schedule_type_localized advance_payment_schedule_type_localized
     *
     * @return $this
     */
    public function setAdvancePaymentScheduleTypeLocalized($advance_payment_schedule_type_localized)
    {
        $this->container['advance_payment_schedule_type_localized'] = $advance_payment_schedule_type_localized;

        return $this;
    }

    /**
     * Gets preferred_invoice_day
     *
     * @return int
     */
    public function getPreferredInvoiceDay()
    {
        return $this->container['preferred_invoice_day'];
    }

    /**
     * Sets preferred_invoice_day
     *
     * @param int $preferred_invoice_day preferred_invoice_day
     *
     * @return $this
     */
    public function setPreferredInvoiceDay($preferred_invoice_day)
    {
        $this->container['preferred_invoice_day'] = $preferred_invoice_day;

        return $this;
    }

    /**
     * Gets print_advance_payment_invoice
     *
     * @return bool
     */
    public function getPrintAdvancePaymentInvoice()
    {
        return $this->container['print_advance_payment_invoice'];
    }

    /**
     * Sets print_advance_payment_invoice
     *
     * @param bool $print_advance_payment_invoice print_advance_payment_invoice
     *
     * @return $this
     */
    public function setPrintAdvancePaymentInvoice($print_advance_payment_invoice)
    {
        $this->container['print_advance_payment_invoice'] = $print_advance_payment_invoice;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


