<?php
/**
 * EcedoERPCRMInterfaceApiPeriodicCostEventLog
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ecedo.ERP.UI.Web Core
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1-core
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.29
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EcedoERPCRMInterfaceApiPeriodicCostEventLog Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EcedoERPCRMInterfaceApiPeriodicCostEventLog implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Ecedo.ERP.CRM.Interface.Api.PeriodicCostEventLog';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_id' => 'string',
        'cluster_reference' => 'string',
        'connection_id' => 'string',
        'ean' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'start_meter_reading_id' => 'string',
        'end_meter_reading_id' => 'string',
        'start_p4_reading_id' => 'string',
        'end_p4_reading_id' => 'string',
        'document_id' => 'string',
        'usage_high_ldn' => 'int',
        'usage_low_ldn' => 'int',
        'usage_single_ldn' => 'int',
        'usage_high_odn' => 'int',
        'usage_low_odn' => 'int',
        'usage_single_odn' => 'int',
        'usage_gas' => 'int',
        'price_high_ldn' => 'double',
        'price_low_ldn' => 'double',
        'price_single_ldn' => 'double',
        'price_high_odn' => 'double',
        'price_low_odn' => 'double',
        'price_single_odn' => 'double',
        'price_gas' => 'double',
        'price_fixed_fee_electricity' => 'double',
        'price_fixed_fee_gas' => 'double',
        'price_network_costs_electricity' => 'double',
        'price_network_costs_gas' => 'double',
        'price_tax_credit' => 'double',
        'price_high_ldn_taxed' => 'double',
        'price_low_ldn_taxed' => 'double',
        'price_single_ldn_taxed' => 'double',
        'price_high_odn_taxed' => 'double',
        'price_low_odn_taxed' => 'double',
        'price_single_odn_taxed' => 'double',
        'price_gas_taxed' => 'double',
        'price_fixed_fee_electricity_taxed' => 'double',
        'price_fixed_fee_gas_taxed' => 'double',
        'price_network_costs_electricity_taxed' => 'double',
        'price_network_costs_gas_taxed' => 'double',
        'price_tax_credit_taxed' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_id' => null,
        'cluster_reference' => null,
        'connection_id' => null,
        'ean' => null,
        'start_date' => 'date',
        'end_date' => 'date',
        'start_meter_reading_id' => 'uuid',
        'end_meter_reading_id' => 'uuid',
        'start_p4_reading_id' => 'uuid',
        'end_p4_reading_id' => 'uuid',
        'document_id' => 'uuid',
        'usage_high_ldn' => 'int32',
        'usage_low_ldn' => 'int32',
        'usage_single_ldn' => 'int32',
        'usage_high_odn' => 'int32',
        'usage_low_odn' => 'int32',
        'usage_single_odn' => 'int32',
        'usage_gas' => 'int32',
        'price_high_ldn' => 'double',
        'price_low_ldn' => 'double',
        'price_single_ldn' => 'double',
        'price_high_odn' => 'double',
        'price_low_odn' => 'double',
        'price_single_odn' => 'double',
        'price_gas' => 'double',
        'price_fixed_fee_electricity' => 'double',
        'price_fixed_fee_gas' => 'double',
        'price_network_costs_electricity' => 'double',
        'price_network_costs_gas' => 'double',
        'price_tax_credit' => 'double',
        'price_high_ldn_taxed' => 'double',
        'price_low_ldn_taxed' => 'double',
        'price_single_ldn_taxed' => 'double',
        'price_high_odn_taxed' => 'double',
        'price_low_odn_taxed' => 'double',
        'price_single_odn_taxed' => 'double',
        'price_gas_taxed' => 'double',
        'price_fixed_fee_electricity_taxed' => 'double',
        'price_fixed_fee_gas_taxed' => 'double',
        'price_network_costs_electricity_taxed' => 'double',
        'price_network_costs_gas_taxed' => 'double',
        'price_tax_credit_taxed' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_id' => 'OrganizationId',
        'cluster_reference' => 'ClusterReference',
        'connection_id' => 'ConnectionId',
        'ean' => 'EAN',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'start_meter_reading_id' => 'StartMeterReadingId',
        'end_meter_reading_id' => 'EndMeterReadingId',
        'start_p4_reading_id' => 'StartP4ReadingId',
        'end_p4_reading_id' => 'EndP4ReadingId',
        'document_id' => 'DocumentId',
        'usage_high_ldn' => 'UsageHighLDN',
        'usage_low_ldn' => 'UsageLowLDN',
        'usage_single_ldn' => 'UsageSingleLDN',
        'usage_high_odn' => 'UsageHighODN',
        'usage_low_odn' => 'UsageLowODN',
        'usage_single_odn' => 'UsageSingleODN',
        'usage_gas' => 'UsageGas',
        'price_high_ldn' => 'PriceHighLDN',
        'price_low_ldn' => 'PriceLowLDN',
        'price_single_ldn' => 'PriceSingleLDN',
        'price_high_odn' => 'PriceHighODN',
        'price_low_odn' => 'PriceLowODN',
        'price_single_odn' => 'PriceSingleODN',
        'price_gas' => 'PriceGas',
        'price_fixed_fee_electricity' => 'PriceFixedFeeElectricity',
        'price_fixed_fee_gas' => 'PriceFixedFeeGas',
        'price_network_costs_electricity' => 'PriceNetworkCostsElectricity',
        'price_network_costs_gas' => 'PriceNetworkCostsGas',
        'price_tax_credit' => 'PriceTaxCredit',
        'price_high_ldn_taxed' => 'PriceHighLDNTaxed',
        'price_low_ldn_taxed' => 'PriceLowLDNTaxed',
        'price_single_ldn_taxed' => 'PriceSingleLDNTaxed',
        'price_high_odn_taxed' => 'PriceHighODNTaxed',
        'price_low_odn_taxed' => 'PriceLowODNTaxed',
        'price_single_odn_taxed' => 'PriceSingleODNTaxed',
        'price_gas_taxed' => 'PriceGasTaxed',
        'price_fixed_fee_electricity_taxed' => 'PriceFixedFeeElectricityTaxed',
        'price_fixed_fee_gas_taxed' => 'PriceFixedFeeGasTaxed',
        'price_network_costs_electricity_taxed' => 'PriceNetworkCostsElectricityTaxed',
        'price_network_costs_gas_taxed' => 'PriceNetworkCostsGasTaxed',
        'price_tax_credit_taxed' => 'PriceTaxCreditTaxed'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_id' => 'setOrganizationId',
        'cluster_reference' => 'setClusterReference',
        'connection_id' => 'setConnectionId',
        'ean' => 'setEan',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'start_meter_reading_id' => 'setStartMeterReadingId',
        'end_meter_reading_id' => 'setEndMeterReadingId',
        'start_p4_reading_id' => 'setStartP4ReadingId',
        'end_p4_reading_id' => 'setEndP4ReadingId',
        'document_id' => 'setDocumentId',
        'usage_high_ldn' => 'setUsageHighLdn',
        'usage_low_ldn' => 'setUsageLowLdn',
        'usage_single_ldn' => 'setUsageSingleLdn',
        'usage_high_odn' => 'setUsageHighOdn',
        'usage_low_odn' => 'setUsageLowOdn',
        'usage_single_odn' => 'setUsageSingleOdn',
        'usage_gas' => 'setUsageGas',
        'price_high_ldn' => 'setPriceHighLdn',
        'price_low_ldn' => 'setPriceLowLdn',
        'price_single_ldn' => 'setPriceSingleLdn',
        'price_high_odn' => 'setPriceHighOdn',
        'price_low_odn' => 'setPriceLowOdn',
        'price_single_odn' => 'setPriceSingleOdn',
        'price_gas' => 'setPriceGas',
        'price_fixed_fee_electricity' => 'setPriceFixedFeeElectricity',
        'price_fixed_fee_gas' => 'setPriceFixedFeeGas',
        'price_network_costs_electricity' => 'setPriceNetworkCostsElectricity',
        'price_network_costs_gas' => 'setPriceNetworkCostsGas',
        'price_tax_credit' => 'setPriceTaxCredit',
        'price_high_ldn_taxed' => 'setPriceHighLdnTaxed',
        'price_low_ldn_taxed' => 'setPriceLowLdnTaxed',
        'price_single_ldn_taxed' => 'setPriceSingleLdnTaxed',
        'price_high_odn_taxed' => 'setPriceHighOdnTaxed',
        'price_low_odn_taxed' => 'setPriceLowOdnTaxed',
        'price_single_odn_taxed' => 'setPriceSingleOdnTaxed',
        'price_gas_taxed' => 'setPriceGasTaxed',
        'price_fixed_fee_electricity_taxed' => 'setPriceFixedFeeElectricityTaxed',
        'price_fixed_fee_gas_taxed' => 'setPriceFixedFeeGasTaxed',
        'price_network_costs_electricity_taxed' => 'setPriceNetworkCostsElectricityTaxed',
        'price_network_costs_gas_taxed' => 'setPriceNetworkCostsGasTaxed',
        'price_tax_credit_taxed' => 'setPriceTaxCreditTaxed'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_id' => 'getOrganizationId',
        'cluster_reference' => 'getClusterReference',
        'connection_id' => 'getConnectionId',
        'ean' => 'getEan',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'start_meter_reading_id' => 'getStartMeterReadingId',
        'end_meter_reading_id' => 'getEndMeterReadingId',
        'start_p4_reading_id' => 'getStartP4ReadingId',
        'end_p4_reading_id' => 'getEndP4ReadingId',
        'document_id' => 'getDocumentId',
        'usage_high_ldn' => 'getUsageHighLdn',
        'usage_low_ldn' => 'getUsageLowLdn',
        'usage_single_ldn' => 'getUsageSingleLdn',
        'usage_high_odn' => 'getUsageHighOdn',
        'usage_low_odn' => 'getUsageLowOdn',
        'usage_single_odn' => 'getUsageSingleOdn',
        'usage_gas' => 'getUsageGas',
        'price_high_ldn' => 'getPriceHighLdn',
        'price_low_ldn' => 'getPriceLowLdn',
        'price_single_ldn' => 'getPriceSingleLdn',
        'price_high_odn' => 'getPriceHighOdn',
        'price_low_odn' => 'getPriceLowOdn',
        'price_single_odn' => 'getPriceSingleOdn',
        'price_gas' => 'getPriceGas',
        'price_fixed_fee_electricity' => 'getPriceFixedFeeElectricity',
        'price_fixed_fee_gas' => 'getPriceFixedFeeGas',
        'price_network_costs_electricity' => 'getPriceNetworkCostsElectricity',
        'price_network_costs_gas' => 'getPriceNetworkCostsGas',
        'price_tax_credit' => 'getPriceTaxCredit',
        'price_high_ldn_taxed' => 'getPriceHighLdnTaxed',
        'price_low_ldn_taxed' => 'getPriceLowLdnTaxed',
        'price_single_ldn_taxed' => 'getPriceSingleLdnTaxed',
        'price_high_odn_taxed' => 'getPriceHighOdnTaxed',
        'price_low_odn_taxed' => 'getPriceLowOdnTaxed',
        'price_single_odn_taxed' => 'getPriceSingleOdnTaxed',
        'price_gas_taxed' => 'getPriceGasTaxed',
        'price_fixed_fee_electricity_taxed' => 'getPriceFixedFeeElectricityTaxed',
        'price_fixed_fee_gas_taxed' => 'getPriceFixedFeeGasTaxed',
        'price_network_costs_electricity_taxed' => 'getPriceNetworkCostsElectricityTaxed',
        'price_network_costs_gas_taxed' => 'getPriceNetworkCostsGasTaxed',
        'price_tax_credit_taxed' => 'getPriceTaxCreditTaxed'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_id'] = isset($data['organization_id']) ? $data['organization_id'] : null;
        $this->container['cluster_reference'] = isset($data['cluster_reference']) ? $data['cluster_reference'] : null;
        $this->container['connection_id'] = isset($data['connection_id']) ? $data['connection_id'] : null;
        $this->container['ean'] = isset($data['ean']) ? $data['ean'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['start_meter_reading_id'] = isset($data['start_meter_reading_id']) ? $data['start_meter_reading_id'] : null;
        $this->container['end_meter_reading_id'] = isset($data['end_meter_reading_id']) ? $data['end_meter_reading_id'] : null;
        $this->container['start_p4_reading_id'] = isset($data['start_p4_reading_id']) ? $data['start_p4_reading_id'] : null;
        $this->container['end_p4_reading_id'] = isset($data['end_p4_reading_id']) ? $data['end_p4_reading_id'] : null;
        $this->container['document_id'] = isset($data['document_id']) ? $data['document_id'] : null;
        $this->container['usage_high_ldn'] = isset($data['usage_high_ldn']) ? $data['usage_high_ldn'] : null;
        $this->container['usage_low_ldn'] = isset($data['usage_low_ldn']) ? $data['usage_low_ldn'] : null;
        $this->container['usage_single_ldn'] = isset($data['usage_single_ldn']) ? $data['usage_single_ldn'] : null;
        $this->container['usage_high_odn'] = isset($data['usage_high_odn']) ? $data['usage_high_odn'] : null;
        $this->container['usage_low_odn'] = isset($data['usage_low_odn']) ? $data['usage_low_odn'] : null;
        $this->container['usage_single_odn'] = isset($data['usage_single_odn']) ? $data['usage_single_odn'] : null;
        $this->container['usage_gas'] = isset($data['usage_gas']) ? $data['usage_gas'] : null;
        $this->container['price_high_ldn'] = isset($data['price_high_ldn']) ? $data['price_high_ldn'] : null;
        $this->container['price_low_ldn'] = isset($data['price_low_ldn']) ? $data['price_low_ldn'] : null;
        $this->container['price_single_ldn'] = isset($data['price_single_ldn']) ? $data['price_single_ldn'] : null;
        $this->container['price_high_odn'] = isset($data['price_high_odn']) ? $data['price_high_odn'] : null;
        $this->container['price_low_odn'] = isset($data['price_low_odn']) ? $data['price_low_odn'] : null;
        $this->container['price_single_odn'] = isset($data['price_single_odn']) ? $data['price_single_odn'] : null;
        $this->container['price_gas'] = isset($data['price_gas']) ? $data['price_gas'] : null;
        $this->container['price_fixed_fee_electricity'] = isset($data['price_fixed_fee_electricity']) ? $data['price_fixed_fee_electricity'] : null;
        $this->container['price_fixed_fee_gas'] = isset($data['price_fixed_fee_gas']) ? $data['price_fixed_fee_gas'] : null;
        $this->container['price_network_costs_electricity'] = isset($data['price_network_costs_electricity']) ? $data['price_network_costs_electricity'] : null;
        $this->container['price_network_costs_gas'] = isset($data['price_network_costs_gas']) ? $data['price_network_costs_gas'] : null;
        $this->container['price_tax_credit'] = isset($data['price_tax_credit']) ? $data['price_tax_credit'] : null;
        $this->container['price_high_ldn_taxed'] = isset($data['price_high_ldn_taxed']) ? $data['price_high_ldn_taxed'] : null;
        $this->container['price_low_ldn_taxed'] = isset($data['price_low_ldn_taxed']) ? $data['price_low_ldn_taxed'] : null;
        $this->container['price_single_ldn_taxed'] = isset($data['price_single_ldn_taxed']) ? $data['price_single_ldn_taxed'] : null;
        $this->container['price_high_odn_taxed'] = isset($data['price_high_odn_taxed']) ? $data['price_high_odn_taxed'] : null;
        $this->container['price_low_odn_taxed'] = isset($data['price_low_odn_taxed']) ? $data['price_low_odn_taxed'] : null;
        $this->container['price_single_odn_taxed'] = isset($data['price_single_odn_taxed']) ? $data['price_single_odn_taxed'] : null;
        $this->container['price_gas_taxed'] = isset($data['price_gas_taxed']) ? $data['price_gas_taxed'] : null;
        $this->container['price_fixed_fee_electricity_taxed'] = isset($data['price_fixed_fee_electricity_taxed']) ? $data['price_fixed_fee_electricity_taxed'] : null;
        $this->container['price_fixed_fee_gas_taxed'] = isset($data['price_fixed_fee_gas_taxed']) ? $data['price_fixed_fee_gas_taxed'] : null;
        $this->container['price_network_costs_electricity_taxed'] = isset($data['price_network_costs_electricity_taxed']) ? $data['price_network_costs_electricity_taxed'] : null;
        $this->container['price_network_costs_gas_taxed'] = isset($data['price_network_costs_gas_taxed']) ? $data['price_network_costs_gas_taxed'] : null;
        $this->container['price_tax_credit_taxed'] = isset($data['price_tax_credit_taxed']) ? $data['price_tax_credit_taxed'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_id
     *
     * @return string
     */
    public function getOrganizationId()
    {
        return $this->container['organization_id'];
    }

    /**
     * Sets organization_id
     *
     * @param string $organization_id organization_id
     *
     * @return $this
     */
    public function setOrganizationId($organization_id)
    {
        $this->container['organization_id'] = $organization_id;

        return $this;
    }

    /**
     * Gets cluster_reference
     *
     * @return string
     */
    public function getClusterReference()
    {
        return $this->container['cluster_reference'];
    }

    /**
     * Sets cluster_reference
     *
     * @param string $cluster_reference cluster_reference
     *
     * @return $this
     */
    public function setClusterReference($cluster_reference)
    {
        $this->container['cluster_reference'] = $cluster_reference;

        return $this;
    }

    /**
     * Gets connection_id
     *
     * @return string
     */
    public function getConnectionId()
    {
        return $this->container['connection_id'];
    }

    /**
     * Sets connection_id
     *
     * @param string $connection_id connection_id
     *
     * @return $this
     */
    public function setConnectionId($connection_id)
    {
        $this->container['connection_id'] = $connection_id;

        return $this;
    }

    /**
     * Gets ean
     *
     * @return string
     */
    public function getEan()
    {
        return $this->container['ean'];
    }

    /**
     * Sets ean
     *
     * @param string $ean ean
     *
     * @return $this
     */
    public function setEan($ean)
    {
        $this->container['ean'] = $ean;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date start_date
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date end_date
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets start_meter_reading_id
     *
     * @return string
     */
    public function getStartMeterReadingId()
    {
        return $this->container['start_meter_reading_id'];
    }

    /**
     * Sets start_meter_reading_id
     *
     * @param string $start_meter_reading_id start_meter_reading_id
     *
     * @return $this
     */
    public function setStartMeterReadingId($start_meter_reading_id)
    {
        $this->container['start_meter_reading_id'] = $start_meter_reading_id;

        return $this;
    }

    /**
     * Gets end_meter_reading_id
     *
     * @return string
     */
    public function getEndMeterReadingId()
    {
        return $this->container['end_meter_reading_id'];
    }

    /**
     * Sets end_meter_reading_id
     *
     * @param string $end_meter_reading_id end_meter_reading_id
     *
     * @return $this
     */
    public function setEndMeterReadingId($end_meter_reading_id)
    {
        $this->container['end_meter_reading_id'] = $end_meter_reading_id;

        return $this;
    }

    /**
     * Gets start_p4_reading_id
     *
     * @return string
     */
    public function getStartP4ReadingId()
    {
        return $this->container['start_p4_reading_id'];
    }

    /**
     * Sets start_p4_reading_id
     *
     * @param string $start_p4_reading_id start_p4_reading_id
     *
     * @return $this
     */
    public function setStartP4ReadingId($start_p4_reading_id)
    {
        $this->container['start_p4_reading_id'] = $start_p4_reading_id;

        return $this;
    }

    /**
     * Gets end_p4_reading_id
     *
     * @return string
     */
    public function getEndP4ReadingId()
    {
        return $this->container['end_p4_reading_id'];
    }

    /**
     * Sets end_p4_reading_id
     *
     * @param string $end_p4_reading_id end_p4_reading_id
     *
     * @return $this
     */
    public function setEndP4ReadingId($end_p4_reading_id)
    {
        $this->container['end_p4_reading_id'] = $end_p4_reading_id;

        return $this;
    }

    /**
     * Gets document_id
     *
     * @return string
     */
    public function getDocumentId()
    {
        return $this->container['document_id'];
    }

    /**
     * Sets document_id
     *
     * @param string $document_id document_id
     *
     * @return $this
     */
    public function setDocumentId($document_id)
    {
        $this->container['document_id'] = $document_id;

        return $this;
    }

    /**
     * Gets usage_high_ldn
     *
     * @return int
     */
    public function getUsageHighLdn()
    {
        return $this->container['usage_high_ldn'];
    }

    /**
     * Sets usage_high_ldn
     *
     * @param int $usage_high_ldn usage_high_ldn
     *
     * @return $this
     */
    public function setUsageHighLdn($usage_high_ldn)
    {
        $this->container['usage_high_ldn'] = $usage_high_ldn;

        return $this;
    }

    /**
     * Gets usage_low_ldn
     *
     * @return int
     */
    public function getUsageLowLdn()
    {
        return $this->container['usage_low_ldn'];
    }

    /**
     * Sets usage_low_ldn
     *
     * @param int $usage_low_ldn usage_low_ldn
     *
     * @return $this
     */
    public function setUsageLowLdn($usage_low_ldn)
    {
        $this->container['usage_low_ldn'] = $usage_low_ldn;

        return $this;
    }

    /**
     * Gets usage_single_ldn
     *
     * @return int
     */
    public function getUsageSingleLdn()
    {
        return $this->container['usage_single_ldn'];
    }

    /**
     * Sets usage_single_ldn
     *
     * @param int $usage_single_ldn usage_single_ldn
     *
     * @return $this
     */
    public function setUsageSingleLdn($usage_single_ldn)
    {
        $this->container['usage_single_ldn'] = $usage_single_ldn;

        return $this;
    }

    /**
     * Gets usage_high_odn
     *
     * @return int
     */
    public function getUsageHighOdn()
    {
        return $this->container['usage_high_odn'];
    }

    /**
     * Sets usage_high_odn
     *
     * @param int $usage_high_odn usage_high_odn
     *
     * @return $this
     */
    public function setUsageHighOdn($usage_high_odn)
    {
        $this->container['usage_high_odn'] = $usage_high_odn;

        return $this;
    }

    /**
     * Gets usage_low_odn
     *
     * @return int
     */
    public function getUsageLowOdn()
    {
        return $this->container['usage_low_odn'];
    }

    /**
     * Sets usage_low_odn
     *
     * @param int $usage_low_odn usage_low_odn
     *
     * @return $this
     */
    public function setUsageLowOdn($usage_low_odn)
    {
        $this->container['usage_low_odn'] = $usage_low_odn;

        return $this;
    }

    /**
     * Gets usage_single_odn
     *
     * @return int
     */
    public function getUsageSingleOdn()
    {
        return $this->container['usage_single_odn'];
    }

    /**
     * Sets usage_single_odn
     *
     * @param int $usage_single_odn usage_single_odn
     *
     * @return $this
     */
    public function setUsageSingleOdn($usage_single_odn)
    {
        $this->container['usage_single_odn'] = $usage_single_odn;

        return $this;
    }

    /**
     * Gets usage_gas
     *
     * @return int
     */
    public function getUsageGas()
    {
        return $this->container['usage_gas'];
    }

    /**
     * Sets usage_gas
     *
     * @param int $usage_gas usage_gas
     *
     * @return $this
     */
    public function setUsageGas($usage_gas)
    {
        $this->container['usage_gas'] = $usage_gas;

        return $this;
    }

    /**
     * Gets price_high_ldn
     *
     * @return double
     */
    public function getPriceHighLdn()
    {
        return $this->container['price_high_ldn'];
    }

    /**
     * Sets price_high_ldn
     *
     * @param double $price_high_ldn price_high_ldn
     *
     * @return $this
     */
    public function setPriceHighLdn($price_high_ldn)
    {
        $this->container['price_high_ldn'] = $price_high_ldn;

        return $this;
    }

    /**
     * Gets price_low_ldn
     *
     * @return double
     */
    public function getPriceLowLdn()
    {
        return $this->container['price_low_ldn'];
    }

    /**
     * Sets price_low_ldn
     *
     * @param double $price_low_ldn price_low_ldn
     *
     * @return $this
     */
    public function setPriceLowLdn($price_low_ldn)
    {
        $this->container['price_low_ldn'] = $price_low_ldn;

        return $this;
    }

    /**
     * Gets price_single_ldn
     *
     * @return double
     */
    public function getPriceSingleLdn()
    {
        return $this->container['price_single_ldn'];
    }

    /**
     * Sets price_single_ldn
     *
     * @param double $price_single_ldn price_single_ldn
     *
     * @return $this
     */
    public function setPriceSingleLdn($price_single_ldn)
    {
        $this->container['price_single_ldn'] = $price_single_ldn;

        return $this;
    }

    /**
     * Gets price_high_odn
     *
     * @return double
     */
    public function getPriceHighOdn()
    {
        return $this->container['price_high_odn'];
    }

    /**
     * Sets price_high_odn
     *
     * @param double $price_high_odn price_high_odn
     *
     * @return $this
     */
    public function setPriceHighOdn($price_high_odn)
    {
        $this->container['price_high_odn'] = $price_high_odn;

        return $this;
    }

    /**
     * Gets price_low_odn
     *
     * @return double
     */
    public function getPriceLowOdn()
    {
        return $this->container['price_low_odn'];
    }

    /**
     * Sets price_low_odn
     *
     * @param double $price_low_odn price_low_odn
     *
     * @return $this
     */
    public function setPriceLowOdn($price_low_odn)
    {
        $this->container['price_low_odn'] = $price_low_odn;

        return $this;
    }

    /**
     * Gets price_single_odn
     *
     * @return double
     */
    public function getPriceSingleOdn()
    {
        return $this->container['price_single_odn'];
    }

    /**
     * Sets price_single_odn
     *
     * @param double $price_single_odn price_single_odn
     *
     * @return $this
     */
    public function setPriceSingleOdn($price_single_odn)
    {
        $this->container['price_single_odn'] = $price_single_odn;

        return $this;
    }

    /**
     * Gets price_gas
     *
     * @return double
     */
    public function getPriceGas()
    {
        return $this->container['price_gas'];
    }

    /**
     * Sets price_gas
     *
     * @param double $price_gas price_gas
     *
     * @return $this
     */
    public function setPriceGas($price_gas)
    {
        $this->container['price_gas'] = $price_gas;

        return $this;
    }

    /**
     * Gets price_fixed_fee_electricity
     *
     * @return double
     */
    public function getPriceFixedFeeElectricity()
    {
        return $this->container['price_fixed_fee_electricity'];
    }

    /**
     * Sets price_fixed_fee_electricity
     *
     * @param double $price_fixed_fee_electricity price_fixed_fee_electricity
     *
     * @return $this
     */
    public function setPriceFixedFeeElectricity($price_fixed_fee_electricity)
    {
        $this->container['price_fixed_fee_electricity'] = $price_fixed_fee_electricity;

        return $this;
    }

    /**
     * Gets price_fixed_fee_gas
     *
     * @return double
     */
    public function getPriceFixedFeeGas()
    {
        return $this->container['price_fixed_fee_gas'];
    }

    /**
     * Sets price_fixed_fee_gas
     *
     * @param double $price_fixed_fee_gas price_fixed_fee_gas
     *
     * @return $this
     */
    public function setPriceFixedFeeGas($price_fixed_fee_gas)
    {
        $this->container['price_fixed_fee_gas'] = $price_fixed_fee_gas;

        return $this;
    }

    /**
     * Gets price_network_costs_electricity
     *
     * @return double
     */
    public function getPriceNetworkCostsElectricity()
    {
        return $this->container['price_network_costs_electricity'];
    }

    /**
     * Sets price_network_costs_electricity
     *
     * @param double $price_network_costs_electricity price_network_costs_electricity
     *
     * @return $this
     */
    public function setPriceNetworkCostsElectricity($price_network_costs_electricity)
    {
        $this->container['price_network_costs_electricity'] = $price_network_costs_electricity;

        return $this;
    }

    /**
     * Gets price_network_costs_gas
     *
     * @return double
     */
    public function getPriceNetworkCostsGas()
    {
        return $this->container['price_network_costs_gas'];
    }

    /**
     * Sets price_network_costs_gas
     *
     * @param double $price_network_costs_gas price_network_costs_gas
     *
     * @return $this
     */
    public function setPriceNetworkCostsGas($price_network_costs_gas)
    {
        $this->container['price_network_costs_gas'] = $price_network_costs_gas;

        return $this;
    }

    /**
     * Gets price_tax_credit
     *
     * @return double
     */
    public function getPriceTaxCredit()
    {
        return $this->container['price_tax_credit'];
    }

    /**
     * Sets price_tax_credit
     *
     * @param double $price_tax_credit price_tax_credit
     *
     * @return $this
     */
    public function setPriceTaxCredit($price_tax_credit)
    {
        $this->container['price_tax_credit'] = $price_tax_credit;

        return $this;
    }

    /**
     * Gets price_high_ldn_taxed
     *
     * @return double
     */
    public function getPriceHighLdnTaxed()
    {
        return $this->container['price_high_ldn_taxed'];
    }

    /**
     * Sets price_high_ldn_taxed
     *
     * @param double $price_high_ldn_taxed price_high_ldn_taxed
     *
     * @return $this
     */
    public function setPriceHighLdnTaxed($price_high_ldn_taxed)
    {
        $this->container['price_high_ldn_taxed'] = $price_high_ldn_taxed;

        return $this;
    }

    /**
     * Gets price_low_ldn_taxed
     *
     * @return double
     */
    public function getPriceLowLdnTaxed()
    {
        return $this->container['price_low_ldn_taxed'];
    }

    /**
     * Sets price_low_ldn_taxed
     *
     * @param double $price_low_ldn_taxed price_low_ldn_taxed
     *
     * @return $this
     */
    public function setPriceLowLdnTaxed($price_low_ldn_taxed)
    {
        $this->container['price_low_ldn_taxed'] = $price_low_ldn_taxed;

        return $this;
    }

    /**
     * Gets price_single_ldn_taxed
     *
     * @return double
     */
    public function getPriceSingleLdnTaxed()
    {
        return $this->container['price_single_ldn_taxed'];
    }

    /**
     * Sets price_single_ldn_taxed
     *
     * @param double $price_single_ldn_taxed price_single_ldn_taxed
     *
     * @return $this
     */
    public function setPriceSingleLdnTaxed($price_single_ldn_taxed)
    {
        $this->container['price_single_ldn_taxed'] = $price_single_ldn_taxed;

        return $this;
    }

    /**
     * Gets price_high_odn_taxed
     *
     * @return double
     */
    public function getPriceHighOdnTaxed()
    {
        return $this->container['price_high_odn_taxed'];
    }

    /**
     * Sets price_high_odn_taxed
     *
     * @param double $price_high_odn_taxed price_high_odn_taxed
     *
     * @return $this
     */
    public function setPriceHighOdnTaxed($price_high_odn_taxed)
    {
        $this->container['price_high_odn_taxed'] = $price_high_odn_taxed;

        return $this;
    }

    /**
     * Gets price_low_odn_taxed
     *
     * @return double
     */
    public function getPriceLowOdnTaxed()
    {
        return $this->container['price_low_odn_taxed'];
    }

    /**
     * Sets price_low_odn_taxed
     *
     * @param double $price_low_odn_taxed price_low_odn_taxed
     *
     * @return $this
     */
    public function setPriceLowOdnTaxed($price_low_odn_taxed)
    {
        $this->container['price_low_odn_taxed'] = $price_low_odn_taxed;

        return $this;
    }

    /**
     * Gets price_single_odn_taxed
     *
     * @return double
     */
    public function getPriceSingleOdnTaxed()
    {
        return $this->container['price_single_odn_taxed'];
    }

    /**
     * Sets price_single_odn_taxed
     *
     * @param double $price_single_odn_taxed price_single_odn_taxed
     *
     * @return $this
     */
    public function setPriceSingleOdnTaxed($price_single_odn_taxed)
    {
        $this->container['price_single_odn_taxed'] = $price_single_odn_taxed;

        return $this;
    }

    /**
     * Gets price_gas_taxed
     *
     * @return double
     */
    public function getPriceGasTaxed()
    {
        return $this->container['price_gas_taxed'];
    }

    /**
     * Sets price_gas_taxed
     *
     * @param double $price_gas_taxed price_gas_taxed
     *
     * @return $this
     */
    public function setPriceGasTaxed($price_gas_taxed)
    {
        $this->container['price_gas_taxed'] = $price_gas_taxed;

        return $this;
    }

    /**
     * Gets price_fixed_fee_electricity_taxed
     *
     * @return double
     */
    public function getPriceFixedFeeElectricityTaxed()
    {
        return $this->container['price_fixed_fee_electricity_taxed'];
    }

    /**
     * Sets price_fixed_fee_electricity_taxed
     *
     * @param double $price_fixed_fee_electricity_taxed price_fixed_fee_electricity_taxed
     *
     * @return $this
     */
    public function setPriceFixedFeeElectricityTaxed($price_fixed_fee_electricity_taxed)
    {
        $this->container['price_fixed_fee_electricity_taxed'] = $price_fixed_fee_electricity_taxed;

        return $this;
    }

    /**
     * Gets price_fixed_fee_gas_taxed
     *
     * @return double
     */
    public function getPriceFixedFeeGasTaxed()
    {
        return $this->container['price_fixed_fee_gas_taxed'];
    }

    /**
     * Sets price_fixed_fee_gas_taxed
     *
     * @param double $price_fixed_fee_gas_taxed price_fixed_fee_gas_taxed
     *
     * @return $this
     */
    public function setPriceFixedFeeGasTaxed($price_fixed_fee_gas_taxed)
    {
        $this->container['price_fixed_fee_gas_taxed'] = $price_fixed_fee_gas_taxed;

        return $this;
    }

    /**
     * Gets price_network_costs_electricity_taxed
     *
     * @return double
     */
    public function getPriceNetworkCostsElectricityTaxed()
    {
        return $this->container['price_network_costs_electricity_taxed'];
    }

    /**
     * Sets price_network_costs_electricity_taxed
     *
     * @param double $price_network_costs_electricity_taxed price_network_costs_electricity_taxed
     *
     * @return $this
     */
    public function setPriceNetworkCostsElectricityTaxed($price_network_costs_electricity_taxed)
    {
        $this->container['price_network_costs_electricity_taxed'] = $price_network_costs_electricity_taxed;

        return $this;
    }

    /**
     * Gets price_network_costs_gas_taxed
     *
     * @return double
     */
    public function getPriceNetworkCostsGasTaxed()
    {
        return $this->container['price_network_costs_gas_taxed'];
    }

    /**
     * Sets price_network_costs_gas_taxed
     *
     * @param double $price_network_costs_gas_taxed price_network_costs_gas_taxed
     *
     * @return $this
     */
    public function setPriceNetworkCostsGasTaxed($price_network_costs_gas_taxed)
    {
        $this->container['price_network_costs_gas_taxed'] = $price_network_costs_gas_taxed;

        return $this;
    }

    /**
     * Gets price_tax_credit_taxed
     *
     * @return double
     */
    public function getPriceTaxCreditTaxed()
    {
        return $this->container['price_tax_credit_taxed'];
    }

    /**
     * Sets price_tax_credit_taxed
     *
     * @param double $price_tax_credit_taxed price_tax_credit_taxed
     *
     * @return $this
     */
    public function setPriceTaxCreditTaxed($price_tax_credit_taxed)
    {
        $this->container['price_tax_credit_taxed'] = $price_tax_credit_taxed;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


