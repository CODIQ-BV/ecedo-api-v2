<?php
/**
 * EcedoERPCRMInterfaceApiOrganization
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ecedo.ERP.UI.Web Core
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1-core
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.29
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EcedoERPCRMInterfaceApiOrganization Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EcedoERPCRMInterfaceApiOrganization implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Ecedo.ERP.CRM.Interface.Api.Organization';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'e_invoice_address' => 'string',
        'preferred_contact_method' => 'string',
        'preferred_contact_method_localized' => 'string',
        'bad_payment_history' => 'bool',
        'has_receiver' => 'bool',
        'channel' => 'string',
        'origin_reference' => 'string',
        'client_reference' => 'string',
        'sales_reference' => 'string',
        'parent_organization_id' => 'string',
        'is_parent' => 'bool',
        'address' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiAddress',
        'business_address' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiAddress',
        'debtor' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiDebtor',
        'representative' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiRepresentativeBase',
        'is_producer' => 'bool',
        'kv_k_number' => 'string',
        'vat_number' => 'string',
        'connections' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiConnection[]',
        'registered_seat' => 'string',
        'authorized_signatory' => 'string',
        'representative_id' => 'string',
        'product_or_service_info' => 'bool',
        'print_welcome_letter' => 'bool',
        'with_collection_agency' => 'bool',
        'is_intercompany' => 'bool',
        'company_label_id' => 'string',
        'organization_type' => 'string',
        'organization_type_localized' => 'string',
        'organization_id' => 'string',
        'reference' => 'string',
        'organization_group_id' => 'string',
        'organization_group' => 'string',
        'name' => 'string',
        'phone_number' => 'string',
        'mobile_number' => 'string',
        'fax_number' => 'string',
        'email' => 'string',
        'person' => '\Swagger\Client\Model\EcedoERPCRMInterfaceApiPerson'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'e_invoice_address' => null,
        'preferred_contact_method' => null,
        'preferred_contact_method_localized' => null,
        'bad_payment_history' => null,
        'has_receiver' => null,
        'channel' => null,
        'origin_reference' => null,
        'client_reference' => null,
        'sales_reference' => null,
        'parent_organization_id' => 'uuid',
        'is_parent' => null,
        'address' => null,
        'business_address' => null,
        'debtor' => null,
        'representative' => null,
        'is_producer' => null,
        'kv_k_number' => null,
        'vat_number' => null,
        'connections' => null,
        'registered_seat' => null,
        'authorized_signatory' => null,
        'representative_id' => 'uuid',
        'product_or_service_info' => null,
        'print_welcome_letter' => null,
        'with_collection_agency' => null,
        'is_intercompany' => null,
        'company_label_id' => null,
        'organization_type' => null,
        'organization_type_localized' => null,
        'organization_id' => null,
        'reference' => null,
        'organization_group_id' => null,
        'organization_group' => null,
        'name' => null,
        'phone_number' => null,
        'mobile_number' => null,
        'fax_number' => null,
        'email' => null,
        'person' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'e_invoice_address' => 'EInvoiceAddress',
        'preferred_contact_method' => 'PreferredContactMethod',
        'preferred_contact_method_localized' => 'PreferredContactMethodLocalized',
        'bad_payment_history' => 'BadPaymentHistory',
        'has_receiver' => 'HasReceiver',
        'channel' => 'Channel',
        'origin_reference' => 'OriginReference',
        'client_reference' => 'ClientReference',
        'sales_reference' => 'SalesReference',
        'parent_organization_id' => 'ParentOrganizationId',
        'is_parent' => 'IsParent',
        'address' => 'Address',
        'business_address' => 'BusinessAddress',
        'debtor' => 'Debtor',
        'representative' => 'Representative',
        'is_producer' => 'IsProducer',
        'kv_k_number' => 'KvKNumber',
        'vat_number' => 'VatNumber',
        'connections' => 'Connections',
        'registered_seat' => 'RegisteredSeat',
        'authorized_signatory' => 'AuthorizedSignatory',
        'representative_id' => 'RepresentativeId',
        'product_or_service_info' => 'ProductOrServiceInfo',
        'print_welcome_letter' => 'PrintWelcomeLetter',
        'with_collection_agency' => 'WithCollectionAgency',
        'is_intercompany' => 'IsIntercompany',
        'company_label_id' => 'CompanyLabelId',
        'organization_type' => 'OrganizationType',
        'organization_type_localized' => 'OrganizationTypeLocalized',
        'organization_id' => 'OrganizationId',
        'reference' => 'Reference',
        'organization_group_id' => 'OrganizationGroupId',
        'organization_group' => 'OrganizationGroup',
        'name' => 'Name',
        'phone_number' => 'PhoneNumber',
        'mobile_number' => 'MobileNumber',
        'fax_number' => 'FaxNumber',
        'email' => 'Email',
        'person' => 'Person'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'e_invoice_address' => 'setEInvoiceAddress',
        'preferred_contact_method' => 'setPreferredContactMethod',
        'preferred_contact_method_localized' => 'setPreferredContactMethodLocalized',
        'bad_payment_history' => 'setBadPaymentHistory',
        'has_receiver' => 'setHasReceiver',
        'channel' => 'setChannel',
        'origin_reference' => 'setOriginReference',
        'client_reference' => 'setClientReference',
        'sales_reference' => 'setSalesReference',
        'parent_organization_id' => 'setParentOrganizationId',
        'is_parent' => 'setIsParent',
        'address' => 'setAddress',
        'business_address' => 'setBusinessAddress',
        'debtor' => 'setDebtor',
        'representative' => 'setRepresentative',
        'is_producer' => 'setIsProducer',
        'kv_k_number' => 'setKvKNumber',
        'vat_number' => 'setVatNumber',
        'connections' => 'setConnections',
        'registered_seat' => 'setRegisteredSeat',
        'authorized_signatory' => 'setAuthorizedSignatory',
        'representative_id' => 'setRepresentativeId',
        'product_or_service_info' => 'setProductOrServiceInfo',
        'print_welcome_letter' => 'setPrintWelcomeLetter',
        'with_collection_agency' => 'setWithCollectionAgency',
        'is_intercompany' => 'setIsIntercompany',
        'company_label_id' => 'setCompanyLabelId',
        'organization_type' => 'setOrganizationType',
        'organization_type_localized' => 'setOrganizationTypeLocalized',
        'organization_id' => 'setOrganizationId',
        'reference' => 'setReference',
        'organization_group_id' => 'setOrganizationGroupId',
        'organization_group' => 'setOrganizationGroup',
        'name' => 'setName',
        'phone_number' => 'setPhoneNumber',
        'mobile_number' => 'setMobileNumber',
        'fax_number' => 'setFaxNumber',
        'email' => 'setEmail',
        'person' => 'setPerson'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'e_invoice_address' => 'getEInvoiceAddress',
        'preferred_contact_method' => 'getPreferredContactMethod',
        'preferred_contact_method_localized' => 'getPreferredContactMethodLocalized',
        'bad_payment_history' => 'getBadPaymentHistory',
        'has_receiver' => 'getHasReceiver',
        'channel' => 'getChannel',
        'origin_reference' => 'getOriginReference',
        'client_reference' => 'getClientReference',
        'sales_reference' => 'getSalesReference',
        'parent_organization_id' => 'getParentOrganizationId',
        'is_parent' => 'getIsParent',
        'address' => 'getAddress',
        'business_address' => 'getBusinessAddress',
        'debtor' => 'getDebtor',
        'representative' => 'getRepresentative',
        'is_producer' => 'getIsProducer',
        'kv_k_number' => 'getKvKNumber',
        'vat_number' => 'getVatNumber',
        'connections' => 'getConnections',
        'registered_seat' => 'getRegisteredSeat',
        'authorized_signatory' => 'getAuthorizedSignatory',
        'representative_id' => 'getRepresentativeId',
        'product_or_service_info' => 'getProductOrServiceInfo',
        'print_welcome_letter' => 'getPrintWelcomeLetter',
        'with_collection_agency' => 'getWithCollectionAgency',
        'is_intercompany' => 'getIsIntercompany',
        'company_label_id' => 'getCompanyLabelId',
        'organization_type' => 'getOrganizationType',
        'organization_type_localized' => 'getOrganizationTypeLocalized',
        'organization_id' => 'getOrganizationId',
        'reference' => 'getReference',
        'organization_group_id' => 'getOrganizationGroupId',
        'organization_group' => 'getOrganizationGroup',
        'name' => 'getName',
        'phone_number' => 'getPhoneNumber',
        'mobile_number' => 'getMobileNumber',
        'fax_number' => 'getFaxNumber',
        'email' => 'getEmail',
        'person' => 'getPerson'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['e_invoice_address'] = isset($data['e_invoice_address']) ? $data['e_invoice_address'] : null;
        $this->container['preferred_contact_method'] = isset($data['preferred_contact_method']) ? $data['preferred_contact_method'] : null;
        $this->container['preferred_contact_method_localized'] = isset($data['preferred_contact_method_localized']) ? $data['preferred_contact_method_localized'] : null;
        $this->container['bad_payment_history'] = isset($data['bad_payment_history']) ? $data['bad_payment_history'] : null;
        $this->container['has_receiver'] = isset($data['has_receiver']) ? $data['has_receiver'] : null;
        $this->container['channel'] = isset($data['channel']) ? $data['channel'] : null;
        $this->container['origin_reference'] = isset($data['origin_reference']) ? $data['origin_reference'] : null;
        $this->container['client_reference'] = isset($data['client_reference']) ? $data['client_reference'] : null;
        $this->container['sales_reference'] = isset($data['sales_reference']) ? $data['sales_reference'] : null;
        $this->container['parent_organization_id'] = isset($data['parent_organization_id']) ? $data['parent_organization_id'] : null;
        $this->container['is_parent'] = isset($data['is_parent']) ? $data['is_parent'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['business_address'] = isset($data['business_address']) ? $data['business_address'] : null;
        $this->container['debtor'] = isset($data['debtor']) ? $data['debtor'] : null;
        $this->container['representative'] = isset($data['representative']) ? $data['representative'] : null;
        $this->container['is_producer'] = isset($data['is_producer']) ? $data['is_producer'] : null;
        $this->container['kv_k_number'] = isset($data['kv_k_number']) ? $data['kv_k_number'] : null;
        $this->container['vat_number'] = isset($data['vat_number']) ? $data['vat_number'] : null;
        $this->container['connections'] = isset($data['connections']) ? $data['connections'] : null;
        $this->container['registered_seat'] = isset($data['registered_seat']) ? $data['registered_seat'] : null;
        $this->container['authorized_signatory'] = isset($data['authorized_signatory']) ? $data['authorized_signatory'] : null;
        $this->container['representative_id'] = isset($data['representative_id']) ? $data['representative_id'] : null;
        $this->container['product_or_service_info'] = isset($data['product_or_service_info']) ? $data['product_or_service_info'] : null;
        $this->container['print_welcome_letter'] = isset($data['print_welcome_letter']) ? $data['print_welcome_letter'] : null;
        $this->container['with_collection_agency'] = isset($data['with_collection_agency']) ? $data['with_collection_agency'] : null;
        $this->container['is_intercompany'] = isset($data['is_intercompany']) ? $data['is_intercompany'] : null;
        $this->container['company_label_id'] = isset($data['company_label_id']) ? $data['company_label_id'] : null;
        $this->container['organization_type'] = isset($data['organization_type']) ? $data['organization_type'] : null;
        $this->container['organization_type_localized'] = isset($data['organization_type_localized']) ? $data['organization_type_localized'] : null;
        $this->container['organization_id'] = isset($data['organization_id']) ? $data['organization_id'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['organization_group_id'] = isset($data['organization_group_id']) ? $data['organization_group_id'] : null;
        $this->container['organization_group'] = isset($data['organization_group']) ? $data['organization_group'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['mobile_number'] = isset($data['mobile_number']) ? $data['mobile_number'] : null;
        $this->container['fax_number'] = isset($data['fax_number']) ? $data['fax_number'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['person'] = isset($data['person']) ? $data['person'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets e_invoice_address
     *
     * @return string
     */
    public function getEInvoiceAddress()
    {
        return $this->container['e_invoice_address'];
    }

    /**
     * Sets e_invoice_address
     *
     * @param string $e_invoice_address Optioneel e-factuuradres van de klant
     *
     * @return $this
     */
    public function setEInvoiceAddress($e_invoice_address)
    {
        $this->container['e_invoice_address'] = $e_invoice_address;

        return $this;
    }

    /**
     * Gets preferred_contact_method
     *
     * @return string
     */
    public function getPreferredContactMethod()
    {
        return $this->container['preferred_contact_method'];
    }

    /**
     * Sets preferred_contact_method
     *
     * @param string $preferred_contact_method Optioneel veld waarmee de standaard communicatiemethode overschreven kan worden. Dit heeft bijvoorbeeld invloed op de methode waarmee de welkomstbrief wordt verstuurd
     *
     * @return $this
     */
    public function setPreferredContactMethod($preferred_contact_method)
    {
        $this->container['preferred_contact_method'] = $preferred_contact_method;

        return $this;
    }

    /**
     * Gets preferred_contact_method_localized
     *
     * @return string
     */
    public function getPreferredContactMethodLocalized()
    {
        return $this->container['preferred_contact_method_localized'];
    }

    /**
     * Sets preferred_contact_method_localized
     *
     * @param string $preferred_contact_method_localized Nederlandse vertaling van PreferredContactMethod
     *
     * @return $this
     */
    public function setPreferredContactMethodLocalized($preferred_contact_method_localized)
    {
        $this->container['preferred_contact_method_localized'] = $preferred_contact_method_localized;

        return $this;
    }

    /**
     * Gets bad_payment_history
     *
     * @return bool
     */
    public function getBadPaymentHistory()
    {
        return $this->container['bad_payment_history'];
    }

    /**
     * Sets bad_payment_history
     *
     * @param bool $bad_payment_history Optioneel veld waarmee aangegeven kan worden dat de klant een slechte betaalhistorie heeft. De waarde van dit veld is ter registratie en heeft geen impact op processen
     *
     * @return $this
     */
    public function setBadPaymentHistory($bad_payment_history)
    {
        $this->container['bad_payment_history'] = $bad_payment_history;

        return $this;
    }

    /**
     * Gets has_receiver
     *
     * @return bool
     */
    public function getHasReceiver()
    {
        return $this->container['has_receiver'];
    }

    /**
     * Sets has_receiver
     *
     * @param bool $has_receiver Optioneel veld waarmee aangegeven kan worden dat de klant een bewindvoerder heeft. De waarde van dit veld is ter registratie en heeft geen impact op processen
     *
     * @return $this
     */
    public function setHasReceiver($has_receiver)
    {
        $this->container['has_receiver'] = $has_receiver;

        return $this;
    }

    /**
     * Gets channel
     *
     * @return string
     */
    public function getChannel()
    {
        return $this->container['channel'];
    }

    /**
     * Sets channel
     *
     * @param string $channel Vrij veld waarin bijvoorbeeld vastgelegd kan worden via welk kanaal de klant is gewonnen
     *
     * @return $this
     */
    public function setChannel($channel)
    {
        $this->container['channel'] = $channel;

        return $this;
    }

    /**
     * Gets origin_reference
     *
     * @return string
     */
    public function getOriginReference()
    {
        return $this->container['origin_reference'];
    }

    /**
     * Sets origin_reference
     *
     * @param string $origin_reference Vrij veld waarin bijvoorbeeld vastgelegd kan worden via welk bron de klant is gewonnen
     *
     * @return $this
     */
    public function setOriginReference($origin_reference)
    {
        $this->container['origin_reference'] = $origin_reference;

        return $this;
    }

    /**
     * Gets client_reference
     *
     * @return string
     */
    public function getClientReference()
    {
        return $this->container['client_reference'];
    }

    /**
     * Sets client_reference
     *
     * @param string $client_reference Als Ecedo klantnummers genereert is dit een vrij veld waar een externe referentie in vastgelegd kan worden.<br />  Als Ecedo de klantnummers niet genereert bevat dit veld een kopie de Reference
     *
     * @return $this
     */
    public function setClientReference($client_reference)
    {
        $this->container['client_reference'] = $client_reference;

        return $this;
    }

    /**
     * Gets sales_reference
     *
     * @return string
     */
    public function getSalesReference()
    {
        return $this->container['sales_reference'];
    }

    /**
     * Sets sales_reference
     *
     * @param string $sales_reference Vrij veld waarin bijvoorbeeld vastgelegd kan worden via welke sale deze klant is gewonnen
     *
     * @return $this
     */
    public function setSalesReference($sales_reference)
    {
        $this->container['sales_reference'] = $sales_reference;

        return $this;
    }

    /**
     * Gets parent_organization_id
     *
     * @return string
     */
    public function getParentOrganizationId()
    {
        return $this->container['parent_organization_id'];
    }

    /**
     * Sets parent_organization_id
     *
     * @param string $parent_organization_id Optioneel veld waarmee aangegeven kan worden dat de klant een dochterorganisatie is. Dit veld bevat het  OrganizationId van de moederorganisatie. Dit is alleen mogelijk bij zakelijke klanten
     *
     * @return $this
     */
    public function setParentOrganizationId($parent_organization_id)
    {
        $this->container['parent_organization_id'] = $parent_organization_id;

        return $this;
    }

    /**
     * Gets is_parent
     *
     * @return bool
     */
    public function getIsParent()
    {
        return $this->container['is_parent'];
    }

    /**
     * Sets is_parent
     *
     * @param bool $is_parent Optioneel veld waarmee aangegeven kan worden dat de klant een moederorganisatie is. Dit is alleen mogelijk bij zakelijke klanten
     *
     * @return $this
     */
    public function setIsParent($is_parent)
    {
        $this->container['is_parent'] = $is_parent;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiAddress
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiAddress $address Postadres van de klant
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets business_address
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiAddress
     */
    public function getBusinessAddress()
    {
        return $this->container['business_address'];
    }

    /**
     * Sets business_address
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiAddress $business_address Eventueel afwijkend vestigingsadres van de klant. Alleen van toepassing bij zakelijke klanten
     *
     * @return $this
     */
    public function setBusinessAddress($business_address)
    {
        $this->container['business_address'] = $business_address;

        return $this;
    }

    /**
     * Gets debtor
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiDebtor
     */
    public function getDebtor()
    {
        return $this->container['debtor'];
    }

    /**
     * Sets debtor
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiDebtor $debtor Debiteur- en betaalgegevens
     *
     * @return $this
     */
    public function setDebtor($debtor)
    {
        $this->container['debtor'] = $debtor;

        return $this;
    }

    /**
     * Gets representative
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiRepresentativeBase
     */
    public function getRepresentative()
    {
        return $this->container['representative'];
    }

    /**
     * Sets representative
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiRepresentativeBase $representative Optioneel veld waarmee de verkoper die de klant heeft getekend geregistreerd kan worden
     *
     * @return $this
     */
    public function setRepresentative($representative)
    {
        $this->container['representative'] = $representative;

        return $this;
    }

    /**
     * Gets is_producer
     *
     * @return bool
     */
    public function getIsProducer()
    {
        return $this->container['is_producer'];
    }

    /**
     * Sets is_producer
     *
     * @param bool $is_producer Geeft aan of de klant een producent is. Alleen van toepassing bij zakelijke klanten
     *
     * @return $this
     */
    public function setIsProducer($is_producer)
    {
        $this->container['is_producer'] = $is_producer;

        return $this;
    }

    /**
     * Gets kv_k_number
     *
     * @return string
     */
    public function getKvKNumber()
    {
        return $this->container['kv_k_number'];
    }

    /**
     * Sets kv_k_number
     *
     * @param string $kv_k_number Optioneel veld waarin het KvK-nummer van een zakelijke klant vastgelegd kan worden
     *
     * @return $this
     */
    public function setKvKNumber($kv_k_number)
    {
        $this->container['kv_k_number'] = $kv_k_number;

        return $this;
    }

    /**
     * Gets vat_number
     *
     * @return string
     */
    public function getVatNumber()
    {
        return $this->container['vat_number'];
    }

    /**
     * Sets vat_number
     *
     * @param string $vat_number Optioneel veld waarin het btw-nummer van een zakelijke klant vastgelegd kan worden
     *
     * @return $this
     */
    public function setVatNumber($vat_number)
    {
        $this->container['vat_number'] = $vat_number;

        return $this;
    }

    /**
     * Gets connections
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiConnection[]
     */
    public function getConnections()
    {
        return $this->container['connections'];
    }

    /**
     * Sets connections
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiConnection[] $connections Een lijst van aansluitingen die bij de klant bekend zijn. Of deze lijst gevuld is is afhankelijk van de API en de meegegeven query-parameters
     *
     * @return $this
     */
    public function setConnections($connections)
    {
        $this->container['connections'] = $connections;

        return $this;
    }

    /**
     * Gets registered_seat
     *
     * @return string
     */
    public function getRegisteredSeat()
    {
        return $this->container['registered_seat'];
    }

    /**
     * Sets registered_seat
     *
     * @param string $registered_seat Optioneel veld voor zakelijke klanten waarmee aangegeven worden waar de klant statutair gevestigd is
     *
     * @return $this
     */
    public function setRegisteredSeat($registered_seat)
    {
        $this->container['registered_seat'] = $registered_seat;

        return $this;
    }

    /**
     * Gets authorized_signatory
     *
     * @return string
     */
    public function getAuthorizedSignatory()
    {
        return $this->container['authorized_signatory'];
    }

    /**
     * Sets authorized_signatory
     *
     * @param string $authorized_signatory Optioneel veld voor zakelijke klanten waarmee aangegeven worden wie tekenbevoegd is
     *
     * @return $this
     */
    public function setAuthorizedSignatory($authorized_signatory)
    {
        $this->container['authorized_signatory'] = $authorized_signatory;

        return $this;
    }

    /**
     * Gets representative_id
     *
     * @return string
     */
    public function getRepresentativeId()
    {
        return $this->container['representative_id'];
    }

    /**
     * Sets representative_id
     *
     * @param string $representative_id Optioneel veld waarmee de verkoper die de klant heeft getekend geregistreerd kan worden. Dit veld is een duplicaat van het Representative-object
     *
     * @return $this
     */
    public function setRepresentativeId($representative_id)
    {
        $this->container['representative_id'] = $representative_id;

        return $this;
    }

    /**
     * Gets product_or_service_info
     *
     * @return bool
     */
    public function getProductOrServiceInfo()
    {
        return $this->container['product_or_service_info'];
    }

    /**
     * Sets product_or_service_info
     *
     * @param bool $product_or_service_info Optioneel veld waarmee aangegeven kan worden dat de klant informatie over producten of diensten wil ontvangen. De waarde van dit veld is ter registratie en heeft geen impact op processen. De leverancier is zelf verantwoordelijk voor het versturen van de informatie
     *
     * @return $this
     */
    public function setProductOrServiceInfo($product_or_service_info)
    {
        $this->container['product_or_service_info'] = $product_or_service_info;

        return $this;
    }

    /**
     * Gets print_welcome_letter
     *
     * @return bool
     */
    public function getPrintWelcomeLetter()
    {
        return $this->container['print_welcome_letter'];
    }

    /**
     * Sets print_welcome_letter
     *
     * @param bool $print_welcome_letter Optioneel veld waarmee aangegeven kan worden dat de klant geen welkomstbrief wil ontvangen. Alleen de waarde \"false\" is mogelijk
     *
     * @return $this
     */
    public function setPrintWelcomeLetter($print_welcome_letter)
    {
        $this->container['print_welcome_letter'] = $print_welcome_letter;

        return $this;
    }

    /**
     * Gets with_collection_agency
     *
     * @return bool
     */
    public function getWithCollectionAgency()
    {
        return $this->container['with_collection_agency'];
    }

    /**
     * Sets with_collection_agency
     *
     * @param bool $with_collection_agency Optioneel veld waarmee aangegeven kan worden dat de klant bij een incassobureau is aangemeld. De waarde van dit veld is ter registratie en heeft geen impact op processen
     *
     * @return $this
     */
    public function setWithCollectionAgency($with_collection_agency)
    {
        $this->container['with_collection_agency'] = $with_collection_agency;

        return $this;
    }

    /**
     * Gets is_intercompany
     *
     * @return bool
     */
    public function getIsIntercompany()
    {
        return $this->container['is_intercompany'];
    }

    /**
     * Sets is_intercompany
     *
     * @param bool $is_intercompany Optioneel veld waarmee bij zakelijke klanten aangegeven kan worden dat de facturen intercompany verstuurd worden
     *
     * @return $this
     */
    public function setIsIntercompany($is_intercompany)
    {
        $this->container['is_intercompany'] = $is_intercompany;

        return $this;
    }

    /**
     * Gets company_label_id
     *
     * @return string
     */
    public function getCompanyLabelId()
    {
        return $this->container['company_label_id'];
    }

    /**
     * Sets company_label_id
     *
     * @param string $company_label_id company_label_id
     *
     * @return $this
     */
    public function setCompanyLabelId($company_label_id)
    {
        $this->container['company_label_id'] = $company_label_id;

        return $this;
    }

    /**
     * Gets organization_type
     *
     * @return string
     */
    public function getOrganizationType()
    {
        return $this->container['organization_type'];
    }

    /**
     * Sets organization_type
     *
     * @param string $organization_type Geeft aan of het een zakelijke of particuliere klant is
     *
     * @return $this
     */
    public function setOrganizationType($organization_type)
    {
        $this->container['organization_type'] = $organization_type;

        return $this;
    }

    /**
     * Gets organization_type_localized
     *
     * @return string
     */
    public function getOrganizationTypeLocalized()
    {
        return $this->container['organization_type_localized'];
    }

    /**
     * Sets organization_type_localized
     *
     * @param string $organization_type_localized Nederlandse vertaling van OrganizationType
     *
     * @return $this
     */
    public function setOrganizationTypeLocalized($organization_type_localized)
    {
        $this->container['organization_type_localized'] = $organization_type_localized;

        return $this;
    }

    /**
     * Gets organization_id
     *
     * @return string
     */
    public function getOrganizationId()
    {
        return $this->container['organization_id'];
    }

    /**
     * Sets organization_id
     *
     * @param string $organization_id Het unieke ID van deze klant
     *
     * @return $this
     */
    public function setOrganizationId($organization_id)
    {
        $this->container['organization_id'] = $organization_id;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference Ket klantnummer van de klant
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets organization_group_id
     *
     * @return string
     */
    public function getOrganizationGroupId()
    {
        return $this->container['organization_group_id'];
    }

    /**
     * Sets organization_group_id
     *
     * @param string $organization_group_id Ket klantnummer van de klant
     *
     * @return $this
     */
    public function setOrganizationGroupId($organization_group_id)
    {
        $this->container['organization_group_id'] = $organization_group_id;

        return $this;
    }

    /**
     * Gets organization_group
     *
     * @return string
     */
    public function getOrganizationGroup()
    {
        return $this->container['organization_group'];
    }

    /**
     * Sets organization_group
     *
     * @param string $organization_group De naam van de klantgroep waarin de klant is geplaatst
     *
     * @return $this
     */
    public function setOrganizationGroup($organization_group)
    {
        $this->container['organization_group'] = $organization_group;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Bij zakelijke klanten bevat dit veld de bedrijfsnaam. Bij consumenten is dit een samengestelde naam op basis van de persoonsgegevens van de klant
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string $phone_number Optioneel veld waarin het vaste telefoonnummer van de klant kan worden opgeslagen
     *
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets mobile_number
     *
     * @return string
     */
    public function getMobileNumber()
    {
        return $this->container['mobile_number'];
    }

    /**
     * Sets mobile_number
     *
     * @param string $mobile_number Optioneel veld waarin het mobiele telefoonnummer van de klant kan worden opgeslagen
     *
     * @return $this
     */
    public function setMobileNumber($mobile_number)
    {
        $this->container['mobile_number'] = $mobile_number;

        return $this;
    }

    /**
     * Gets fax_number
     *
     * @return string
     */
    public function getFaxNumber()
    {
        return $this->container['fax_number'];
    }

    /**
     * Sets fax_number
     *
     * @param string $fax_number Optioneel veld waarin het faxnummer van de klant kan worden opgeslagen
     *
     * @return $this
     */
    public function setFaxNumber($fax_number)
    {
        $this->container['fax_number'] = $fax_number;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email Optioneel veld waarin het e-mailadres van de klant kan worden opgeslagen
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets person
     *
     * @return \Swagger\Client\Model\EcedoERPCRMInterfaceApiPerson
     */
    public function getPerson()
    {
        return $this->container['person'];
    }

    /**
     * Sets person
     *
     * @param \Swagger\Client\Model\EcedoERPCRMInterfaceApiPerson $person De gegevens van de primaire contactpersoon
     *
     * @return $this
     */
    public function setPerson($person)
    {
        $this->container['person'] = $person;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


