<?php
/**
 * EcedoERPCRMInterfaceApiInvoiceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ecedo.ERP.UI.Web Core
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1-core
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.29
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * EcedoERPCRMInterfaceApiInvoiceTest Class Doc Comment
 *
 * @category    Class
 * @description EcedoERPCRMInterfaceApiInvoice
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class EcedoERPCRMInterfaceApiInvoiceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "EcedoERPCRMInterfaceApiInvoice"
     */
    public function testEcedoERPCRMInterfaceApiInvoice()
    {
    }

    /**
     * Test attribute "organization_id"
     */
    public function testPropertyOrganizationId()
    {
    }

    /**
     * Test attribute "cluster_id"
     */
    public function testPropertyClusterId()
    {
    }

    /**
     * Test attribute "cluster_reference"
     */
    public function testPropertyClusterReference()
    {
    }

    /**
     * Test attribute "invoice_id"
     */
    public function testPropertyInvoiceId()
    {
    }

    /**
     * Test attribute "invoice_type"
     */
    public function testPropertyInvoiceType()
    {
    }

    /**
     * Test attribute "invoice_type_localized"
     */
    public function testPropertyInvoiceTypeLocalized()
    {
    }

    /**
     * Test attribute "invoice_sub_type"
     */
    public function testPropertyInvoiceSubType()
    {
    }

    /**
     * Test attribute "invoice_sub_type_localized"
     */
    public function testPropertyInvoiceSubTypeLocalized()
    {
    }

    /**
     * Test attribute "invoice_date"
     */
    public function testPropertyInvoiceDate()
    {
    }

    /**
     * Test attribute "payment_due_date"
     */
    public function testPropertyPaymentDueDate()
    {
    }

    /**
     * Test attribute "invoice_number"
     */
    public function testPropertyInvoiceNumber()
    {
    }

    /**
     * Test attribute "start_date"
     */
    public function testPropertyStartDate()
    {
    }

    /**
     * Test attribute "end_date"
     */
    public function testPropertyEndDate()
    {
    }

    /**
     * Test attribute "period_description"
     */
    public function testPropertyPeriodDescription()
    {
    }

    /**
     * Test attribute "amount"
     */
    public function testPropertyAmount()
    {
    }

    /**
     * Test attribute "vat_amount"
     */
    public function testPropertyVatAmount()
    {
    }

    /**
     * Test attribute "total_amount"
     */
    public function testPropertyTotalAmount()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "status_localized"
     */
    public function testPropertyStatusLocalized()
    {
    }

    /**
     * Test attribute "invoice_document_id"
     */
    public function testPropertyInvoiceDocumentId()
    {
    }

    /**
     * Test attribute "is_credit"
     */
    public function testPropertyIsCredit()
    {
    }

    /**
     * Test attribute "credited_invoice_id"
     */
    public function testPropertyCreditedInvoiceId()
    {
    }

    /**
     * Test attribute "is_final"
     */
    public function testPropertyIsFinal()
    {
    }

    /**
     * Test attribute "is_olev"
     */
    public function testPropertyIsOlev()
    {
    }

    /**
     * Test attribute "settlement_invoice_frequency"
     */
    public function testPropertySettlementInvoiceFrequency()
    {
    }

    /**
     * Test attribute "settlement_invoice_frequency_localized"
     */
    public function testPropertySettlementInvoiceFrequencyLocalized()
    {
    }

    /**
     * Test attribute "parent_invoice_id"
     */
    public function testPropertyParentInvoiceId()
    {
    }

    /**
     * Test attribute "collective_invoice_type"
     */
    public function testPropertyCollectiveInvoiceType()
    {
    }

    /**
     * Test attribute "collective_invoice_type_localized"
     */
    public function testPropertyCollectiveInvoiceTypeLocalized()
    {
    }

    /**
     * Test attribute "child_invoice_ids"
     */
    public function testPropertyChildInvoiceIds()
    {
    }

    /**
     * Test attribute "correction_invoice_id"
     */
    public function testPropertyCorrectionInvoiceId()
    {
    }

    /**
     * Test attribute "corrected_invoice_ids"
     */
    public function testPropertyCorrectedInvoiceIds()
    {
    }

    /**
     * Test attribute "correction_invoice_type"
     */
    public function testPropertyCorrectionInvoiceType()
    {
    }

    /**
     * Test attribute "correction_invoice_type_localized"
     */
    public function testPropertyCorrectionInvoiceTypeLocalized()
    {
    }

    /**
     * Test attribute "invoice_documents"
     */
    public function testPropertyInvoiceDocuments()
    {
    }

    /**
     * Test attribute "has_invoice_usage_calculation_rows"
     */
    public function testPropertyHasInvoiceUsageCalculationRows()
    {
    }

    /**
     * Test attribute "client_reference"
     */
    public function testPropertyClientReference()
    {
    }
}
